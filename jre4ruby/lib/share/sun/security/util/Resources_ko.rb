require "rjava"

# Copyright 2001-2006 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
# 
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
# 
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
module Sun::Security::Util
  module Resources_koImports #:nodoc:
    class_module.module_eval {
      include ::Java::Lang
      include ::Sun::Security::Util
    }
  end
  
  # <p> This class represents the <code>ResourceBundle</code>
  # for javax.security.auth and sun.security.
  class Resources_ko < Java::Util::ListResourceBundle
    include_class_members Resources_koImports
    
    class_module.module_eval {
      # shared (from jarsigner)
      # shared (from keytool)
      # keytool
      # Translators of the following 5 pairs, ATTENTION:
      # the next 5 string pairs are meant to be combined into 2 paragraphs,
      # 1+3+4 and 2+3+5. make sure your translation also does.
      # rest is same as -certreq starting from -keystore *
      # {"-export      [-v] [-rfc] [-protected]",
      #       "-export      [-v] [-rfc] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # {"-genkey      [-v] [-protected]",
      #        "-genkey      [-v] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-identitydb  [-v] [-protected]",
      #      "-identitydb  [-v] [-protected]"},
      # {"\t     [-file <idb_file>]", "\t     [-file <idb_file>]"},
      # rest is same as -certreq starting from -keystore *
      # {"-import      [-v] [-noprompt] [-trustcacerts] [-protected]",
      #       "-import      [-v] [-noprompt] [-trustcacerts] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # \ud589\uc774 \ub108\ubb34 \uae41\ub2c8\ub2e4. 2\ud589\uc73c\ub85c \ubd84\ud560\ud558\uc2ed\uc2dc\uc624.
      # rest is same as -certreq starting from -keystore *
      # {"-keyclone    [-v] [-protected]",
      #      "-keyclone    [-v] [-protected]"},
      # {"\t     [-alias <alias>] -dest <destalias>",
      #      "\t     [-alias <\ubcc4\uce6d>] -dest <\ub300\uc0c1 \ubcc4\uce6d>"},
      # {"\t     [-keypass <keypass>] [-new <new_keypass>]",
      #      "\t     [-keypass <\ud0a4 \uc554\ud638>] [-new <\uc0c8 \ud0a4 \uc554\ud638>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-selfcert    [-v] [-protected]",
      #      "-selfcert    [-v] [-protected]"},
      # {"\t     [-dname <dname>] [-validity <valDays>]",
      #      "\t     [-dname <\ub300\uc0c1 \uc774\ub984>] [-validity <\uc720\ud6a8\uc77c>]"},
      # {"\t     [-keypass <keypass>] [-sigalg <sigalg>]",
      #      "\t     [-keypass <\ud0a4 \uc554\ud638>] [-sigalg <\uc11c\uba85 \uc54c\uace0\ub9ac\uc998>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # policytool
      # javax.security.auth.PrivateCredentialPermission
      # javax.security.auth.x500
      # javax.security.auth.Subject
      # javax.security.auth.login.AppConfigurationEntry
      # javax.security.auth.login.LoginContext
      # sun.security.provider.PolicyFile
      # sun.security.provider.PolicyParser
      # sun.security.pkcs11.SunPKCS11
      # --- DEPRECATED ---
      # javax.security.auth.Policy
      const_set_lazy(:Contents) { Array.typed(Array.typed(Object)).new([Array.typed(Object).new([" ", " "]), Array.typed(Object).new(["  ", "  "]), Array.typed(Object).new(["      ", "      "]), Array.typed(Object).new([", ", ", "]), Array.typed(Object).new(["\n", "\n"]), Array.typed(Object).new(["*******************************************", "*******************************************"]), Array.typed(Object).new(["*******************************************\n\n", "*******************************************\n\n"]), Array.typed(Object).new(["keytool error: ", ("keytool ".to_u << 0xc624 << "".to_u << 0xb958 << ": ")]), Array.typed(Object).new(["Illegal option:  ", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " ".to_u << 0xc635 << "".to_u << 0xc158 << ":   ")]), Array.typed(Object).new(["Try keytool -help", ("keytool -help ".to_u << 0xc0ac << "".to_u << 0xc6a9 << "")]), Array.typed(Object).new(["Command option <flag> needs an argument.", ("".to_u << 0xba85 << "".to_u << 0xb839 << " ".to_u << 0xc635 << "".to_u << 0xc158 << " {0}".to_u << 0xc5d0 << " ".to_u << 0xc778 << "".to_u << 0xc218 << "".to_u << 0xac00 << " ".to_u << 0xd544 << "".to_u << 0xc694 << "".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified <command> value.", ("".to_u << 0xacbd << "".to_u << 0xace0 << ":\t  ".to_u << 0xb2e4 << "".to_u << 0xb978 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xbc0f << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb294 << " PKCS12 ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd574 << " ".to_u << 0xc9c0 << "".to_u << 0xc6d0 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xc790 << "".to_u << 0xac00 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd55c << " {0} ".to_u << 0xac12 << "".to_u << 0xc744 << " ".to_u << 0xbb34 << "".to_u << 0xc2dc << "".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["-keystore must be NONE if -storetype is {0}", ("-storetype".to_u << 0xc774 << " {0}".to_u << 0xc778 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -keystore".to_u << 0xac00 << " NONE".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd568 << "")]), Array.typed(Object).new(["Too may retries, program terminated", ("".to_u << 0xc7ac << "".to_u << 0xc2dc << "".to_u << 0xb3c4 << " ".to_u << 0xd69f << "".to_u << 0xc218 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xb9ce << "".to_u << 0xc544 << " ".to_u << 0xd504 << "".to_u << 0xb85c << "".to_u << 0xadf8 << "".to_u << 0xb7a8 << "".to_u << 0xc774 << " ".to_u << 0xc885 << "".to_u << 0xb8cc << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["-storepasswd and -keypasswd commands not supported if -storetype is {0}", ("-storetype".to_u << 0xc774 << " {0}".to_u << 0xc778 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -storepasswd ".to_u << 0xbc0f << " -keypasswd ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc774 << " ".to_u << 0xc9c0 << "".to_u << 0xc6d0 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc74c << "")]), Array.typed(Object).new(["-keypasswd commands not supported if -storetype is PKCS12", ("-storetype".to_u << 0xc774 << " PKCS12".to_u << 0xc778 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << "".to_u << 0xc5d0 << "".to_u << 0xb294 << " -keypasswd ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc774 << " ".to_u << 0xc9c0 << "".to_u << 0xc6d0 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["-keypass and -new can not be specified if -storetype is {0}", ("-storetype".to_u << 0xc774 << " {0}".to_u << 0xc778 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -keypass ".to_u << 0xbc0f << " -new".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc74c << "")]), Array.typed(Object).new(["if -protected is specified, then -storepass, -keypass, and -new must not be specified", ("-protected".to_u << 0xac00 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xb41c << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -storepass, -keypass ".to_u << 0xbc0f << " -new".to_u << 0xb294 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc544 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["if -srcprotected is specified, then -srcstorepass and -srckeypass must not be specified", ("-srcprotected".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd55c << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -srcstorepass ".to_u << 0xbc0f << " -srckeypass".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xba74 << " ".to_u << 0xc548 << " ".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["if keystore is not password protected, then -storepass, -keypass, and -new must not be specified", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xac00 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb85c << " ".to_u << 0xbcf4 << "".to_u << 0xd638 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -storepass, -keypass ".to_u << 0xbc0f << " -new".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xba74 << " ".to_u << 0xc548 << " ".to_u << 0xb428 << "")]), Array.typed(Object).new(["if source keystore is not password protected, then -srcstorepass and -srckeypass must not be specified", ("".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xac00 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb85c << " ".to_u << 0xbcf4 << "".to_u << 0xd638 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " -srcstorepass ".to_u << 0xbc0f << " -srckeypass".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xba74 << " ".to_u << 0xc548 << " ".to_u << 0xb428 << "")]), Array.typed(Object).new(["Validity must be greater than zero", ("".to_u << 0xc720 << "".to_u << 0xd6a8 << "".to_u << 0xc131 << "".to_u << 0xc740 << " 0".to_u << 0xbcf4 << "".to_u << 0xb2e4 << " ".to_u << 0xcee4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["provName not a provider", (" {0}".to_u << 0xc740 << "(".to_u << 0xb294 << ") ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << "".to_u << 0xac00 << " ".to_u << 0xc544 << "".to_u << 0xb2d9 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Usage error: no command provided", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xbc95 << " ".to_u << 0xc624 << "".to_u << 0xb958 << ": ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Usage error, <arg> is not a legal command", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xbc95 << " ".to_u << 0xc624 << "".to_u << 0xb958 << "".to_u << 0xc785 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". {0}".to_u << 0xc740 << "(".to_u << 0xb294 << ") ".to_u << 0xc720 << "".to_u << 0xd6a8 << "".to_u << 0xd55c << " ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc774 << " ".to_u << 0xc544 << "".to_u << 0xb2d9 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Source keystore file exists, but is empty: ", ("".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc774 << " ".to_u << 0xc788 << "".to_u << 0xc9c0 << "".to_u << 0xb9cc << " ".to_u << 0xbe44 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ")]), Array.typed(Object).new(["Please specify -srckeystore", ("-srckeystore".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Must not specify both -v and -rfc with 'list' command", ("'list' ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc5d0 << " -v".to_u << 0xc640 << " -rfc".to_u << 0xb97c << " ".to_u << 0xbaa8 << "".to_u << 0xb450 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd574 << "".to_u << 0xc11c << "".to_u << 0xb294 << " ".to_u << 0xc548 << " ".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Key password must be at least 6 characters", ("".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb294 << " ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["New password must be at least 6 characters", ("".to_u << 0xc0c8 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb294 << " ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Keystore file exists, but is empty: ", ("keystore ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc774 << " ".to_u << 0xc788 << "".to_u << 0xc9c0 << "".to_u << 0xb9cc << " ".to_u << 0xbe44 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ": ")]), Array.typed(Object).new(["Keystore file does not exist: ", ("keystore ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc774 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ":  ")]), Array.typed(Object).new(["Must specify destination alias", ("".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd574 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Must specify alias", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd574 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Keystore password must be at least 6 characters", ("Keystore ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb294 << " ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Enter keystore password:  ", ("keystore ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb97c << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ":  ")]), Array.typed(Object).new(["Enter source keystore password:  ", ("".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << " ".to_u << 0xc785 << "".to_u << 0xb825 << ":  ")]), Array.typed(Object).new(["Enter destination keystore password:  ", ("".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << " ".to_u << 0xc785 << "".to_u << 0xb825 << ":  ")]), Array.typed(Object).new(["Keystore password is too short - must be at least 6 characters", ("Keystore ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xc9e7 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Unknown Entry Type", ("".to_u << 0xc54c << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xb294 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xc720 << "".to_u << 0xd615 << "")]), Array.typed(Object).new(["Too many failures. Alias not changed", ("".to_u << 0xc2e4 << "".to_u << 0xd328 << " ".to_u << 0xd69f << "".to_u << 0xc218 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xb9ce << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xbcc0 << "".to_u << 0xacbd << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Entry for alias <alias> successfully imported.", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xc131 << "".to_u << 0xacf5 << "".to_u << 0xc801 << "".to_u << 0xc73c << "".to_u << 0xb85c << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc654 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Entry for alias <alias> not imported.", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xc9c0 << " ".to_u << 0xbabb << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Problem importing entry for alias <alias>: <exception>.\nEntry for alias <alias> not imported.", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xb294 << " ".to_u << 0xb3d9 << "".to_u << 0xc548 << " ".to_u << 0xbb38 << "".to_u << 0xc81c << "".to_u << 0xac00 << " ".to_u << 0xbc1c << "".to_u << 0xc0dd << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". {1}.\n".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xc9c0 << " ".to_u << 0xbabb << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Import command completed:  <ok> entries successfully imported, <fail> entries failed or cancelled", ("".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xae30 << " ".to_u << 0xba85 << "".to_u << 0xb839 << " ".to_u << 0xc644 << "".to_u << 0xb8cc << ":  {0}".to_u << 0xac1c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xc131 << "".to_u << 0xacf5 << "".to_u << 0xc801 << "".to_u << 0xc73c << "".to_u << 0xb85c << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc654 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". {1}".to_u << 0xac1c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc740 << " ".to_u << 0xc2e4 << "".to_u << 0xd328 << "".to_u << 0xd588 << "".to_u << 0xac70 << "".to_u << 0xb098 << " ".to_u << 0xcde8 << "".to_u << 0xc18c << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Warning: Overwriting existing alias <alias> in destination keystore", ("".to_u << 0xacbd << "".to_u << 0xace0 << ":\t ".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xc5d0 << "".to_u << 0xc11c << " ".to_u << 0xae30 << "".to_u << 0xc874 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xb36e << "".to_u << 0xc5b4 << "".to_u << 0xc4f0 << "".to_u << 0xb294 << " ".to_u << 0xc911 << "")]), Array.typed(Object).new(["Existing entry alias <alias> exists, overwrite? [no]:  ", ("".to_u << 0xae30 << "".to_u << 0xc874 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xb36e << "".to_u << 0xc5b4 << "".to_u << 0xc4f0 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "? [".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "]:  ")]), Array.typed(Object).new(["Too many failures - try later", ("".to_u << 0xc624 << "".to_u << 0xb958 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xb9ce << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xb098 << "".to_u << 0xc911 << "".to_u << 0xc5d0 << " ".to_u << 0xb2e4 << "".to_u << 0xc2dc << " ".to_u << 0xc2dc << "".to_u << 0xb3c4 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Certification request stored in file <filename>", ("".to_u << 0xc778 << "".to_u << 0xc99d << " ".to_u << 0xc694 << "".to_u << 0xccad << "".to_u << 0xc774 << " <{0}> ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc5d0 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Submit this to your CA", ("CA".to_u << 0xc5d0 << "".to_u << 0xac8c << " ".to_u << 0xc81c << "".to_u << 0xcd9c << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["if alias not specified, destalias, srckeypass, and destkeypass must not be specified", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " destalias, srckeypass ".to_u << 0xbc0f << " destkeypass".to_u << 0xb97c << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xba74 << " ".to_u << 0xc548 << " ".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate stored in file <filename>", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " <{0}> ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc5d0 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate reply was installed in keystore", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc774 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xc124 << "".to_u << 0xce58 << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate reply was not installed in keystore", ("".to_u << 0xc778 << "".to_u << 0xc99d << " ".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc774 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xc124 << "".to_u << 0xce58 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate was added to keystore", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc774 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate was not added to keystore", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["[Storing ksfname]", ("[{0} ".to_u << 0xc800 << "".to_u << 0xc7a5 << " ".to_u << 0xc911 << "]")]), Array.typed(Object).new(["alias has no public key (certificate)", ("{0}".to_u << 0xc5d0 << "".to_u << 0xb294 << " ".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << "(".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << ")".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << "".to_u << 0xc744 << " ".to_u << 0xc720 << "".to_u << 0xb3c4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Alias <alias> does not exist", ("<{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Alias <{0}> has no certificate", ("<{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc5d0 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Key pair not generated, alias <alias> already exists", ("".to_u << 0xd0a4 << " ".to_u << 0xc30d << "".to_u << 0xc774 << " ".to_u << 0xc0dd << "".to_u << 0xc131 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xace0 << " <{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << "".to_u << 0xc744 << " ".to_u << 0xc720 << "".to_u << 0xb3c4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Generating keysize bit keyAlgName key pair and self-signed certificate (sigAlgName) with a validity of validality days\n\tfor: x500Name", ("".to_u << 0xb2e4 << "".to_u << 0xc74c << "".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd574 << " ".to_u << 0xc720 << "".to_u << 0xd6a8 << " ".to_u << 0xae30 << "".to_u << 0xac04 << "".to_u << 0xc774 << " {3}".to_u << 0xc77c << "".to_u << 0xc778 << " {0}".to_u << 0xbe44 << "".to_u << 0xd2b8 << " {1} ".to_u << 0xd0a4 << " ".to_u << 0xc30d << " ".to_u << 0xbc0f << " ".to_u << 0xc790 << "".to_u << 0xccb4 << " ".to_u << 0xc11c << "".to_u << 0xba85 << "".to_u << 0xb41c << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "({2}) ".to_u << 0xc0dd << "".to_u << 0xc131 << " ".to_u << 0xc911 << "\n\t: {4}")]), Array.typed(Object).new(["Enter key password for <alias>", ("<{0}>".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb97c << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["\t(RETURN if same as keystore password):  ", ("\t(keystore ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xc640 << " ".to_u << 0xac19 << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " Enter".to_u << 0xb97c << " ".to_u << 0xb204 << "".to_u << 0xb974 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << "):  ")]), Array.typed(Object).new(["Key password is too short - must be at least 6 characters", ("".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xc9e7 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Too many failures - key not added to keystore", ("".to_u << 0xc624 << "".to_u << 0xb958 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xb9ce << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". keystore".to_u << 0xc5d0 << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Destination alias <dest> already exists", ("".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " <{0}>".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Password is too short - must be at least 6 characters", ("".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xc9e7 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xc5ec << "".to_u << 0xc12f << " ".to_u << 0xae00 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xc0c1 << "".to_u << 0xc774 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Too many failures. Key entry not cloned", ("".to_u << 0xc624 << "".to_u << 0xb958 << "".to_u << 0xac00 << " ".to_u << 0xb108 << "".to_u << 0xbb34 << " ".to_u << 0xb9ce << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xd0a4 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xbcf5 << "".to_u << 0xc81c << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["key password for <alias>", ("<{0}>".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "")]), Array.typed(Object).new(["Keystore entry for <id.getName()> already exists", ("<{0}>".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " keystore ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Creating keystore entry for <id.getName()> ...", ("<{0}>".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " keystore ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xc791 << "".to_u << 0xc131 << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << " ...")]), Array.typed(Object).new(["No entries from identity database added", ("".to_u << 0xc2e0 << "".to_u << 0xc6d0 << " ".to_u << 0xb370 << "".to_u << 0xc774 << "".to_u << 0xd130 << "".to_u << 0xbca0 << "".to_u << 0xc774 << "".to_u << 0xc2a4 << "".to_u << 0xc5d0 << "".to_u << 0xc11c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Alias name: alias", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc774 << "".to_u << 0xb984 << ": {0}")]), Array.typed(Object).new(["Creation date: keyStore.getCreationDate(alias)", ("".to_u << 0xc791 << "".to_u << 0xc131 << "".to_u << 0xc77c << ": keyStore.getCreationDate(alias)")]), Array.typed(Object).new(["alias, keyStore.getCreationDate(alias), ", "{0}, {1,date}, "]), Array.typed(Object).new(["alias, ", "{0},"]), Array.typed(Object).new(["Entry type: <type>", ("".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xc720 << "".to_u << 0xd615 << ": {0}")]), Array.typed(Object).new(["Certificate chain length: ", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xccb4 << "".to_u << 0xc778 << " ".to_u << 0xae38 << "".to_u << 0xc774 << ": ")]), Array.typed(Object).new(["Certificate[(i + 1)]:", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "[{0,number,integer}]:")]), Array.typed(Object).new(["Certificate fingerprint (MD5): ", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xc9c0 << "".to_u << 0xbb38 << "(MD5): ")]), Array.typed(Object).new(["Entry type: trustedCertEntry\n", ("".to_u << 0xc785 << "".to_u << 0xb825 << " ".to_u << 0xc720 << "".to_u << 0xd615 << ": trustedCertEntry\n")]), Array.typed(Object).new(["trustedCertEntry,", "trustedCertEntry,"]), Array.typed(Object).new(["Keystore type: ", ("Keystore ".to_u << 0xc720 << "".to_u << 0xd615 << ": ")]), Array.typed(Object).new(["Keystore provider: ", ("Keystore ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << ": ")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entry", ("Keystore".to_u << 0xc5d0 << "".to_u << 0xb294 << " {0,number,integer} ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xd3ec << "".to_u << 0xd568 << "".to_u << 0xb418 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entries", ("Keystore".to_u << 0xc5d0 << "".to_u << 0xb294 << " {0,number,integer} ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xd3ec << "".to_u << 0xd568 << "".to_u << 0xb418 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Failed to parse input", ("".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xc744 << " ".to_u << 0xad6c << "".to_u << 0xbb38 << " ".to_u << 0xbd84 << "".to_u << 0xc11d << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xbabb << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Empty input", ("".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xc774 << " ".to_u << 0xbe44 << "".to_u << 0xc5b4 << "".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Not X.509 certificate", ("X.509 ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xc544 << "".to_u << 0xb2d9 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << "".to_u << 0xc744 << " ".to_u << 0xc720 << "".to_u << 0xb3c4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["alias has no public key", ("{0}".to_u << 0xc5d0 << "".to_u << 0xb294 << " ".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["alias has no X.509 certificate", ("{0}".to_u << 0xc5d0 << " X.509 ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["New certificate (self-signed):", ("".to_u << 0xc0c8 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "(".to_u << 0xc790 << "".to_u << 0xccb4 << " ".to_u << 0xc11c << "".to_u << 0xba85 << "):")]), Array.typed(Object).new(["Reply has no certificates", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc5d0 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate not imported, alias <alias> already exists", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xb97c << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xace0 << " <{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Input not an X.509 certificate", ("".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xc774 << " X.509 ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xc544 << "".to_u << 0xb2d9 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate already exists in keystore under alias <trustalias>", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " <{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc544 << "".to_u << 0xb798 << "".to_u << 0xc758 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Do you still want to add it? [no]:  ", ("".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "? [".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "]:  ")]), Array.typed(Object).new(["Certificate already exists in system-wide CA keystore under alias <trustalias>", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " <{0}> ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc544 << "".to_u << 0xb798 << "".to_u << 0xc758 << " ".to_u << 0xc2dc << "".to_u << 0xc2a4 << "".to_u << 0xd15c << " ".to_u << 0xbc94 << "".to_u << 0xc704 << " CA keystore".to_u << 0xc5d0 << " ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Do you still want to add it to your own keystore? [no]:  ", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xc790 << " keystore".to_u << 0xc5d0 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "? [".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "]:  ")]), Array.typed(Object).new(["Trust this certificate? [no]:  ", ("".to_u << 0xc774 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xb97c << " ".to_u << 0xc2e0 << "".to_u << 0xb8b0 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "? [".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "]:  ")]), Array.typed(Object).new(["YES", ("".to_u << 0xc608 << "")]), Array.typed(Object).new(["New prompt: ", ("".to_u << 0xc0c8 << " ".to_u << 0xd504 << "".to_u << 0xb86c << "".to_u << 0xd504 << "".to_u << 0xd2b8 << ": ")]), Array.typed(Object).new(["Passwords must differ", ("".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb294 << " ".to_u << 0xb2ec << "".to_u << 0xb77c << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Re-enter new prompt: ", ("".to_u << 0xc0c8 << " {0}".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xb2e4 << "".to_u << 0xc2dc << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ": ")]), Array.typed(Object).new(["Re-enter new password: ", ("".to_u << 0xc0c8 << " ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb97c << " ".to_u << 0xb2e4 << "".to_u << 0xc2dc << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ": ")]), Array.typed(Object).new(["They don't match. Try again", ("".to_u << 0xc77c << "".to_u << 0xce58 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xb2e4 << "".to_u << 0xc2dc << " ".to_u << 0xc2dc << "".to_u << 0xb3c4 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Enter prompt alias name:  ", ("{0} ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ":  ")]), Array.typed(Object).new(["Enter new alias name\t(RETURN to cancel import for this entry):  ", ("".to_u << 0xc0c8 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc785 << "".to_u << 0xb825 << "\t(Enter - ".to_u << 0xc774 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc624 << "".to_u << 0xae30 << " ".to_u << 0xcde8 << "".to_u << 0xc18c << "):  ")]), Array.typed(Object).new(["Enter alias name:  ", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ":  ")]), Array.typed(Object).new(["\t(RETURN if same as for <otherAlias>)", ("\t(<{0}>".to_u << 0xc640 << "(".to_u << 0xacfc << ") ".to_u << 0xac19 << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " Enter".to_u << 0xb97c << " ".to_u << 0xb204 << "".to_u << 0xb974 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".)")]), Array.typed(Object).new(["*PATTERN* printX509Cert", ("".to_u << 0xc18c << "".to_u << 0xc720 << "".to_u << 0xc790 << ": {0}\n".to_u << 0xbc1c << "".to_u << 0xae09 << "".to_u << 0xc790 << ": {1}\n".to_u << 0xc77c << "".to_u << 0xb828 << " ".to_u << 0xbc88 << "".to_u << 0xd638 << ": {2}\n".to_u << 0xc720 << "".to_u << 0xd6a8 << " ".to_u << 0xae30 << "".to_u << 0xac04 << " ".to_u << 0xc2dc << "".to_u << 0xc791 << ": {3} ".to_u << 0xb05d << ": {4}\n".to_u << 0xc778 << "".to_u << 0xc99d << " ".to_u << 0xc9c0 << "".to_u << 0xbb38 << ":\n\t MD5:  {5}\n\t SHA1: {6}\n\t ".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ": {7}\n\t ".to_u << 0xbc84 << "".to_u << 0xc804 << ": {8}")]), Array.typed(Object).new(["What is your first and last name?", ("".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xacfc << " ".to_u << 0xc131 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["What is the name of your organizational unit?", ("".to_u << 0xc870 << "".to_u << 0xc9c1 << " ".to_u << 0xb2e8 << "".to_u << 0xc704 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["What is the name of your organization?", ("".to_u << 0xc870 << "".to_u << 0xc9c1 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["What is the name of your City or Locality?", ("".to_u << 0xad6c << "/".to_u << 0xad70 << "/".to_u << 0xc2dc << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << "?")]), Array.typed(Object).new(["What is the name of your State or Province?", ("".to_u << 0xc2dc << "/".to_u << 0xb3c4 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["What is the two-letter country code for this unit?", ("".to_u << 0xc774 << " ".to_u << 0xc870 << "".to_u << 0xc9c1 << "".to_u << 0xc758 << " ".to_u << 0xb450 << " ".to_u << 0xc790 << "".to_u << 0xb9ac << " ".to_u << 0xad6d << "".to_u << 0xac00 << " ".to_u << 0xcf54 << "".to_u << 0xb4dc << "".to_u << 0xb97c << " ".to_u << 0xc785 << "".to_u << 0xb825 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Is <name> correct?", ("{0}".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xb9de << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "?")]), Array.typed(Object).new(["no", ("".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "")]), Array.typed(Object).new(["yes", ("".to_u << 0xc608 << "")]), Array.typed(Object).new(["y", "y"]), Array.typed(Object).new(["  [defaultValue]:  ", "  [{0}]:  "]), Array.typed(Object).new(["Alias <alias> has no key", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " <{0}>".to_u << 0xc5d0 << " ".to_u << 0xd0a4 << " ".to_u << 0xc5c6 << "".to_u << 0xc74c << "")]), Array.typed(Object).new(["Alias <alias> references an entry type that is not a private key entry.  The -keyclone command only supports cloning of private key entries", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << " <{0}>".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xac1c << "".to_u << 0xc778 << " ".to_u << 0xd0a4 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xc544 << "".to_u << 0xb2cc << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xc720 << "".to_u << 0xd615 << "".to_u << 0xc744 << " ".to_u << 0xcc38 << "".to_u << 0xc870 << "".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".  -keyclone ".to_u << 0xba85 << "".to_u << 0xb839 << "".to_u << 0xc740 << " ".to_u << 0xac1c << "".to_u << 0xc778 << " ".to_u << 0xd0a4 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc758 << " ".to_u << 0xbcf5 << "".to_u << 0xc81c << "".to_u << 0xb9cc << " ".to_u << 0xc9c0 << "".to_u << 0xc6d0 << "".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["*****************  WARNING WARNING WARNING  *****************", ("**************  ".to_u << 0xacbd << "".to_u << 0xace0 << " ".to_u << 0xacbd << "".to_u << 0xace0 << " ".to_u << 0xacbd << "".to_u << 0xace0 << "  **************")]), Array.typed(Object).new(["* The integrity of the information stored in your keystore  *", ("* keystore".to_u << 0xc5d0 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xb41c << " ".to_u << 0xc815 << "".to_u << 0xbcf4 << "".to_u << 0xc758 << " ".to_u << 0xbb34 << "".to_u << 0xacb0 << "".to_u << 0xc131 << "".to_u << 0xc774 << " ".to_u << 0xd655 << "".to_u << 0xc778 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " *")]), Array.typed(Object).new(["* The integrity of the information stored in the srckeystore*", ("* srckeystore".to_u << 0xc5d0 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xb41c << " ".to_u << 0xc815 << "".to_u << 0xbcf4 << "".to_u << 0xc758 << " ".to_u << 0xbb34 << "".to_u << 0xacb0 << "".to_u << 0xc131 << "*")]), Array.typed(Object).new(["* has NOT been verified!  In order to verify its integrity, *", ("* ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << "! ".to_u << 0xbb34 << "".to_u << 0xacb0 << "".to_u << 0xc131 << "".to_u << 0xc744 << " ".to_u << 0xd655 << "".to_u << 0xc778 << "".to_u << 0xd558 << "".to_u << 0xb824 << "".to_u << 0xba74 << " keystore   *")]), Array.typed(Object).new(["* you must provide your keystore password.                  *", ("* ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd574 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".                    *")]), Array.typed(Object).new(["* you must provide the srckeystore password.                *", ("* srckeystore ".to_u << 0xc554 << "".to_u << 0xd638 << "".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd574 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".                *")]), Array.typed(Object).new(["Certificate reply does not contain public key for <alias>", ("".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc5d0 << " <{0}>".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xb4e4 << "".to_u << 0xc5b4 << "".to_u << 0xc788 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Incomplete certificate chain in reply", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc758 << " ".to_u << 0xbd88 << "".to_u << 0xc644 << "".to_u << 0xc804 << "".to_u << 0xd55c << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xccb4 << "".to_u << 0xc778 << "")]), Array.typed(Object).new(["Certificate chain in reply does not verify: ", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc758 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xccb4 << "".to_u << 0xc778 << "".to_u << 0xc774 << " ".to_u << 0xd655 << "".to_u << 0xc778 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ": ")]), Array.typed(Object).new(["Top-level certificate in reply:\n", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc758 << " ".to_u << 0xcd5c << "".to_u << 0xc0c1 << "".to_u << 0xc704 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << ":\n")]), Array.typed(Object).new(["... is not trusted. ", ("... ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ")]), Array.typed(Object).new(["Install reply anyway? [no]:  ", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc744 << " ".to_u << 0xc124 << "".to_u << 0xce58 << "".to_u << 0xd558 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "? [".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "]:  ")]), Array.typed(Object).new(["NO", ("".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "")]), Array.typed(Object).new(["Public keys in reply and keystore don't match", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xacfc << " keystore".to_u << 0xc758 << " ".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xc77c << "".to_u << 0xce58 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Certificate reply and certificate in keystore are identical", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc758 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xc640 << " keystore".to_u << 0xc758 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xac00 << " ".to_u << 0xb3d9 << "".to_u << 0xc77c << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Failed to establish chain from reply", ("".to_u << 0xd68c << "".to_u << 0xc2e0 << "".to_u << 0xc758 << " ".to_u << 0xccb4 << "".to_u << 0xc778 << "".to_u << 0xc744 << " ".to_u << 0xc124 << "".to_u << 0xc815 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xbabb << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["n", "n"]), Array.typed(Object).new(["Wrong answer, try again", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " ".to_u << 0xc751 << "".to_u << 0xb2f5 << "".to_u << 0xc785 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xb2e4 << "".to_u << 0xc2dc << " ".to_u << 0xc2dc << "".to_u << 0xb3c4 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Secret key not generated, alias <alias> already exists", ("".to_u << 0xbcf4 << "".to_u << 0xc548 << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xc0dd << "".to_u << 0xc131 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xbcc4 << "".to_u << 0xce6d << " <{0}>".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xc774 << "".to_u << 0xbbf8 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Please provide -keysize for secret key generation", ("".to_u << 0xbcf4 << "".to_u << 0xc548 << " ".to_u << 0xd0a4 << " ".to_u << 0xc0dd << "".to_u << 0xc131 << "".to_u << 0xc744 << " ".to_u << 0xc704 << "".to_u << 0xd55c << " -keysize".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["keytool usage:\n", ("keytool ".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xbc95 << ":\n")]), Array.typed(Object).new(["Extensions: ", ("".to_u << 0xd655 << "".to_u << 0xc7a5 << "".to_u << 0xc790 << ": ")]), Array.typed(Object).new(["-certreq     [-v] [-protected]", "-certreq     [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-sigalg <sigalg>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">] [-sigalg <".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << ">]")]), Array.typed(Object).new(["\t     [-file <csr_file>] [-keypass <keypass>]", ("\t     [-file <csr ".to_u << 0xd30c << "".to_u << 0xc77c << ">] [-keypass <".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["\t     [-keystore <keystore>] [-storepass <storepass>]", ("\t     [-keystore <".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << ">] [-storepass <".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["\t     [-storetype <storetype>] [-providername <name>]", ("\t     [-storetype <".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc720 << "".to_u << 0xd615 << ">] [-providername <".to_u << 0xc774 << "".to_u << 0xb984 << ">]")]), Array.typed(Object).new(["\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ...", ("\t     [-providerclass <".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "> [-providerarg <".to_u << 0xc778 << "".to_u << 0xc218 << ">]] ...")]), Array.typed(Object).new(["\t     [-providerpath <pathlist>]", ("\t     [-providerpath <".to_u << 0xacbd << "".to_u << 0xb85c << " ".to_u << 0xbaa9 << "".to_u << 0xb85d << ">]")]), Array.typed(Object).new(["-delete      [-v] [-protected] -alias <alias>", ("-delete      [-v] [-protected] -alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">")]), Array.typed(Object).new(["-exportcert  [-v] [-rfc] [-protected]", "-exportcert  [-v] [-rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-file <cert_file>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">] [-file <".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd30c << "".to_u << 0xc77c << ">]")]), Array.typed(Object).new(["-genkeypair  [-v] [-protected]", "-genkeypair  [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["\t     [-keyalg <keyalg>] [-keysize <keysize>]", ("\t     [-keyalg <".to_u << 0xd0a4 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << ">] [-keysize <".to_u << 0xd0a4 << " ".to_u << 0xd06c << "".to_u << 0xae30 << ">]")]), Array.typed(Object).new(["\t     [-sigalg <sigalg>] [-dname <dname>]", ("\t     [-sigalg <".to_u << 0xc11c << "".to_u << 0xba85 << " ".to_u << 0xc54c << "".to_u << 0xace0 << "".to_u << 0xb9ac << "".to_u << 0xc998 << ">] [-dname <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ">]")]), Array.typed(Object).new(["\t     [-validity <valDays>] [-keypass <keypass>]", ("\t     [-validity <".to_u << 0xc720 << "".to_u << 0xd6a8 << "".to_u << 0xc77c << ">] [-keypass <".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["-genseckey   [-v] [-protected]", "-genseckey   [-v] [-protected]"]), Array.typed(Object).new(["-help", "-help"]), Array.typed(Object).new(["-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]", "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["\t     [-alias <alias>] [-keypass <keypass>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">] [-keypass <".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["\t     [-file <cert_file>] [-keypass <keypass>]", ("\t     [-file <".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd30c << "".to_u << 0xc77c << ">] [-keypass <".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["-importkeystore [-v] ", "-importkeystore [-v] "]), Array.typed(Object).new(["\t     [-srckeystore <srckeystore>] [-destkeystore <deststoretype>]", ("\t     [-srckeystore <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << ">] [-destkeystore <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << ">]")]), Array.typed(Object).new(["\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]", ("\t     [-srcstoretype <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc720 << "".to_u << 0xd615 << ">] [-deststoretype <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc720 << "".to_u << 0xd615 << ">]")]), Array.typed(Object).new(["\t     [-srcprotected] [-destprotected]", "\t     [-srcprotected] [-destprotected]"]), Array.typed(Object).new(["\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]", ("\t     [-srcstorepass <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">] [-deststorepass <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new([("\t     [-srcprovidername <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ">]\n\t     [-destprovidername <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ">]"), ("\t     [-srcprovidername <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ">]\n\t     [-destprovidername <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ">]")]), Array.typed(Object).new(["\t     [-srcalias <srcalias> [-destalias <destalias>]", ("\t     [-srcalias <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << "> [-destalias <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]", ("\t       [-srckeypass <".to_u << 0xc18c << "".to_u << 0xc2a4 << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">] [-destkeypass <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]]")]), Array.typed(Object).new(["\t     [-noprompt]", "\t     [-noprompt]"]), Array.typed(Object).new(["-changealias [-v] [-protected] -alias <alias> -destalias <destalias>", ("-changealias [-v] [-protected] -alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << "> -destalias <".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << ">")]), Array.typed(Object).new(["\t     [-keypass <keypass>]", ("\t     [-keypass <".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["-keypasswd   [-v] [-alias <alias>]", ("-keypasswd   [-v] [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["\t     [-keypass <old_keypass>] [-new <new_keypass>]", ("\t     [-keypass <".to_u << 0xae30 << "".to_u << 0xc874 << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">] [-new <".to_u << 0xc0c8 << " ".to_u << 0xd0a4 << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["-list        [-v | -rfc] [-protected]", "-list        [-v | -rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["-printcert   [-v] [-file <cert_file>]", ("-printcert   [-v] [-file <".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd30c << "".to_u << 0xc77c << ">]")]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0xbcc4 << "".to_u << 0xce6d << ">]")]), Array.typed(Object).new(["-storepasswd [-v] [-new <new_storepass>]", ("-storepasswd [-v] [-new <".to_u << 0xc0c8 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc554 << "".to_u << 0xd638 << ">]")]), Array.typed(Object).new(["Warning: A public key for alias 'signers[i]' does not exist.  Make sure a KeyStore is properly configured.", ("".to_u << 0xacbd << "".to_u << 0xace0 << ":\t ".to_u << 0xbcc4 << "".to_u << 0xce6d << " {0}".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd55c << " ".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".  ".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xac00 << " ".to_u << 0xc81c << "".to_u << 0xb300 << "".to_u << 0xb85c << " ".to_u << 0xad6c << "".to_u << 0xc131 << "".to_u << 0xb418 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xb294 << "".to_u << 0xc9c0 << " ".to_u << 0xd655 << "".to_u << 0xc778 << "".to_u << 0xd558 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Warning: Class not found: class", ("".to_u << 0xacbd << "".to_u << 0xace0 << ": ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb97c << " ".to_u << 0xcc3e << "".to_u << 0xc744 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc74c << ": {0}")]), Array.typed(Object).new(["Warning: Invalid argument(s) for constructor: {0}", ("".to_u << 0xacbd << "".to_u << 0xace0 << ":\t ".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " ".to_u << 0xad6c << "".to_u << 0xc131 << "".to_u << 0xc790 << " ".to_u << 0xc778 << "".to_u << 0xc218 << ": {0}")]), Array.typed(Object).new(["Illegal Principal Type: type", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " ".to_u << 0xae30 << "".to_u << 0xbcf8 << " ".to_u << 0xc720 << "".to_u << 0xd615 << ": {0}")]), Array.typed(Object).new(["Illegal option: option", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " ".to_u << 0xc635 << "".to_u << 0xc158 << ": {0}")]), Array.typed(Object).new(["Usage: policytool [options]", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << "".to_u << 0xbc95 << ": policytool [".to_u << 0xc635 << "".to_u << 0xc158 << "]")]), Array.typed(Object).new(["  [-file <file>]    policy file location", ("  [-file <".to_u << 0xd30c << "".to_u << 0xc77c << ">]    ".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd30c << "".to_u << 0xc77c << " ".to_u << 0xc704 << "".to_u << 0xce58 << "")]), Array.typed(Object).new(["New", ("".to_u << 0xc0c8 << "".to_u << 0xb85c << " ".to_u << 0xb9cc << "".to_u << 0xb4e4 << "".to_u << 0xae30 << "")]), Array.typed(Object).new(["Open", ("".to_u << 0xc5f4 << "".to_u << 0xae30 << "")]), Array.typed(Object).new(["Save", ("".to_u << 0xc800 << "".to_u << 0xc7a5 << "")]), Array.typed(Object).new(["Save As", ("".to_u << 0xb2e4 << "".to_u << 0xb978 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc73c << "".to_u << 0xb85c << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "")]), Array.typed(Object).new(["View Warning Log", ("".to_u << 0xacbd << "".to_u << 0xace0 << " ".to_u << 0xb85c << "".to_u << 0xadf8 << " ".to_u << 0xbcf4 << "".to_u << 0xae30 << "")]), Array.typed(Object).new(["Exit", ("".to_u << 0xc885 << "".to_u << 0xb8cc << "")]), Array.typed(Object).new(["Add Policy Entry", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "")]), Array.typed(Object).new(["Edit Policy Entry", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xd3b8 << "".to_u << 0xc9d1 << "")]), Array.typed(Object).new(["Remove Policy Entry", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << " ".to_u << 0xc81c << "".to_u << 0xac70 << "")]), Array.typed(Object).new(["Edit", ("".to_u << 0xd3b8 << "".to_u << 0xc9d1 << "")]), Array.typed(Object).new(["Retain", ("".to_u << 0xc720 << "".to_u << 0xc9c0 << "")]), Array.typed(Object).new(["Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name.", "Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name."]), Array.typed(Object).new(["Add Public Key Alias", ("".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "")]), Array.typed(Object).new(["Remove Public Key Alias", ("".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xd0a4 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << " ".to_u << 0xc81c << "".to_u << 0xac70 << "")]), Array.typed(Object).new(["File", ("".to_u << 0xd30c << "".to_u << 0xc77c << "")]), Array.typed(Object).new(["KeyStore", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "")]), Array.typed(Object).new(["Policy File:", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd30c << "".to_u << 0xc77c << ":")]), Array.typed(Object).new(["Could not open policy file: policyFile: e.toString()", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd30c << "".to_u << 0xc77c << "".to_u << 0xc744 << " ".to_u << 0xc5f4 << "".to_u << 0xc9c0 << " ".to_u << 0xbabb << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". {0}: {1}")]), Array.typed(Object).new(["Policy Tool", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xb3c4 << "".to_u << 0xad6c << "")]), Array.typed(Object).new(["Errors have occurred while opening the policy configuration.  View the Warning Log for more information.", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xad6c << "".to_u << 0xc131 << "".to_u << 0xc744 << " ".to_u << 0xc5ec << "".to_u << 0xb294 << " ".to_u << 0xb3d9 << "".to_u << 0xc548 << " ".to_u << 0xc624 << "".to_u << 0xb958 << "".to_u << 0xac00 << " ".to_u << 0xbc1c << "".to_u << 0xc0dd << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ".to_u << 0xc790 << "".to_u << 0xc138 << "".to_u << 0xd55c << " ".to_u << 0xb0b4 << "".to_u << 0xc6a9 << "".to_u << 0xc740 << " ".to_u << 0xacbd << "".to_u << 0xace0 << " ".to_u << 0xb85c << "".to_u << 0xadf8 << "".to_u << 0xb97c << " ".to_u << 0xbcf4 << "".to_u << 0xc2ed << "".to_u << 0xc2dc << "".to_u << 0xc624 << ".")]), Array.typed(Object).new(["Error", ("".to_u << 0xc624 << "".to_u << 0xb958 << "")]), Array.typed(Object).new(["OK", ("".to_u << 0xd655 << "".to_u << 0xc778 << "")]), Array.typed(Object).new(["Status", ("".to_u << 0xc0c1 << "".to_u << 0xd0dc << "")]), Array.typed(Object).new(["Warning", ("".to_u << 0xacbd << "".to_u << 0xace0 << "")]), Array.typed(Object).new(["Permission:                                                       ", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << ":                                                       ")]), Array.typed(Object).new(["Principal Type:", ("Principal ".to_u << 0xc720 << "".to_u << 0xd615 << ":")]), Array.typed(Object).new(["Principal Name:", ("Principal ".to_u << 0xc774 << "".to_u << 0xb984 << ":")]), Array.typed(Object).new(["Target Name:                                                    ", ("".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xc774 << "".to_u << 0xb984 << ":                                                    ")]), Array.typed(Object).new(["Actions:                                                             ", ("".to_u << 0xc791 << "".to_u << 0xc5c5 << ":                                                             ")]), Array.typed(Object).new(["OK to overwrite existing file filename?", ("".to_u << 0xae30 << "".to_u << 0xc874 << " ".to_u << 0xd30c << "".to_u << 0xc77c << " {0}".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xacb9 << "".to_u << 0xccd0 << "".to_u << 0xc4f0 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "?")]), Array.typed(Object).new(["Cancel", ("".to_u << 0xcde8 << "".to_u << 0xc18c << "")]), Array.typed(Object).new(["CodeBase:", "CodeBase:"]), Array.typed(Object).new(["SignedBy:", "SignedBy:"]), Array.typed(Object).new(["Add Principal", ("Principal ".to_u << 0xcd94 << "".to_u << 0xac00 << "")]), Array.typed(Object).new(["Edit Principal", ("Principal ".to_u << 0xd3b8 << "".to_u << 0xc9d1 << "")]), Array.typed(Object).new(["Remove Principal", ("Principal ".to_u << 0xc81c << "".to_u << 0xac70 << "")]), Array.typed(Object).new(["Principals:", "Principals:"]), Array.typed(Object).new(["  Add Permission", ("  ".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "")]), Array.typed(Object).new(["  Edit Permission", ("  ".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xd3b8 << "".to_u << 0xc9d1 << "")]), Array.typed(Object).new(["Remove Permission", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xc81c << "".to_u << 0xac70 << "")]), Array.typed(Object).new(["Done", ("".to_u << 0xc644 << "".to_u << 0xb8cc << "")]), Array.typed(Object).new(["KeyStore URL:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " URL:")]), Array.typed(Object).new(["KeyStore Type:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xc720 << "".to_u << 0xd615 << ":")]), Array.typed(Object).new(["KeyStore Provider:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << ":")]), Array.typed(Object).new(["KeyStore Password URL:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xbe44 << "".to_u << 0xbc00 << "".to_u << 0xbc88 << "".to_u << 0xd638 << " URL:")]), Array.typed(Object).new(["Principals", "Principals"]), Array.typed(Object).new(["  Edit Principal:", ("  Principal ".to_u << 0xd3b8 << "".to_u << 0xc9d1 << ":")]), Array.typed(Object).new(["  Add New Principal:", ("  ".to_u << 0xc0c8 << " Principal ".to_u << 0xcd94 << "".to_u << 0xac00 << ":")]), Array.typed(Object).new(["Permissions", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << "")]), Array.typed(Object).new(["  Edit Permission:", ("  ".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xd3b8 << "".to_u << 0xc9d1 << ":")]), Array.typed(Object).new(["  Add New Permission:", ("  ".to_u << 0xc0c8 << " ".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xcd94 << "".to_u << 0xac00 << ":")]), Array.typed(Object).new(["Signed By:", ("".to_u << 0xc11c << "".to_u << 0xba85 << "".to_u << 0xc790 << ":")]), Array.typed(Object).new(["Cannot Specify Principal with a Wildcard Class without a Wildcard Name", ("".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << " ".to_u << 0xc774 << "".to_u << 0xb984 << " ".to_u << 0xc5c6 << "".to_u << 0xc774 << " ".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << " ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb97c << " ".to_u << 0xac00 << "".to_u << 0xc9c4 << " Principal".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Cannot Specify Principal without a Name", ("".to_u << 0xc774 << "".to_u << 0xb984 << " ".to_u << 0xc5c6 << "".to_u << 0xc774 << " Principal".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Permission and Target Name must have a value", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << "".to_u << 0xacfc << " ".to_u << 0xb300 << "".to_u << 0xc0c1 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc740 << " ".to_u << 0xac12 << "".to_u << 0xc744 << " ".to_u << 0xac00 << "".to_u << 0xc838 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Remove this Policy Entry?", ("".to_u << 0xc774 << " ".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xac70 << "".to_u << 0xd558 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "?")]), Array.typed(Object).new(["Overwrite File", ("".to_u << 0xd30c << "".to_u << 0xc77c << " ".to_u << 0xacb9 << "".to_u << 0xccd0 << "".to_u << 0xc4f0 << "".to_u << 0xae30 << "")]), Array.typed(Object).new(["Policy successfully written to filename", ("".to_u << 0xc815 << "".to_u << 0xcc45 << "".to_u << 0xc744 << " ".to_u << 0xd30c << "".to_u << 0xc77c << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc5d0 << " ".to_u << 0xc131 << "".to_u << 0xacf5 << "".to_u << 0xc801 << "".to_u << 0xc73c << "".to_u << 0xb85c << " ".to_u << 0xae30 << "".to_u << 0xb85d << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["null filename", ("".to_u << 0xd30c << "".to_u << 0xc77c << " ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc774 << " ".to_u << 0xc5c6 << "".to_u << 0xc74c << "")]), Array.typed(Object).new(["Save changes?", ("".to_u << 0xbcc0 << "".to_u << 0xacbd << " ".to_u << 0xc0ac << "".to_u << 0xd56d << "".to_u << 0xc744 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xd558 << "".to_u << 0xc2dc << "".to_u << 0xaca0 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xae4c << "?")]), Array.typed(Object).new(["Yes", ("".to_u << 0xc608 << "")]), Array.typed(Object).new(["No", ("".to_u << 0xc544 << "".to_u << 0xb2c8 << "".to_u << 0xc624 << "")]), Array.typed(Object).new(["Policy Entry", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "")]), Array.typed(Object).new(["Save Changes", ("".to_u << 0xbcc0 << "".to_u << 0xacbd << " ".to_u << 0xc0ac << "".to_u << 0xd56d << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "")]), Array.typed(Object).new(["No Policy Entry selected", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xc120 << "".to_u << 0xd0dd << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Unable to open KeyStore: ex.toString()", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << "".to_u << 0xb97c << " ".to_u << 0xc5f4 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". {0}")]), Array.typed(Object).new(["No principal selected", ("Principal".to_u << 0xc744 << " ".to_u << 0xc120 << "".to_u << 0xd0dd << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["No permission selected", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << "".to_u << 0xc744 << " ".to_u << 0xc120 << "".to_u << 0xd0dd << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["name", ("".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["configuration type", ("".to_u << 0xad6c << "".to_u << 0xc131 << " ".to_u << 0xc720 << "".to_u << 0xd615 << "")]), Array.typed(Object).new(["environment variable name", ("".to_u << 0xd658 << "".to_u << 0xacbd << " ".to_u << 0xbcc0 << "".to_u << 0xc218 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["library name", ("".to_u << 0xb77c << "".to_u << 0xc774 << "".to_u << 0xbe0c << "".to_u << 0xb7ec << "".to_u << 0xb9ac << " ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["package name", ("".to_u << 0xd328 << "".to_u << 0xd0a4 << "".to_u << 0xc9c0 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["policy type", ("".to_u << 0xc815 << "".to_u << 0xcc45 << " ".to_u << 0xc720 << "".to_u << 0xd615 << "")]), Array.typed(Object).new(["property name", ("".to_u << 0xd2b9 << "".to_u << 0xc131 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["provider name", ("".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << " ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["Principal List", ("".to_u << 0xae30 << "".to_u << 0xbcf8 << " ".to_u << 0xbaa9 << "".to_u << 0xb85d << "")]), Array.typed(Object).new(["Permission List", ("".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xbaa9 << "".to_u << 0xb85d << "")]), Array.typed(Object).new(["Code Base", ("".to_u << 0xcf54 << "".to_u << 0xb4dc << " ".to_u << 0xbca0 << "".to_u << 0xc774 << "".to_u << 0xc2a4 << "")]), Array.typed(Object).new(["KeyStore U R L:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " U R L:")]), Array.typed(Object).new(["KeyStore Password U R L:", ("".to_u << 0xd0a4 << " ".to_u << 0xc800 << "".to_u << 0xc7a5 << "".to_u << 0xc18c << " ".to_u << 0xbe44 << "".to_u << 0xbc00 << "".to_u << 0xbc88 << "".to_u << 0xd638 << " U R L:")]), Array.typed(Object).new(["invalid null input(s)", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null ".to_u << 0xc785 << "".to_u << 0xb825 << "")]), Array.typed(Object).new(["actions can only be 'read'", ("".to_u << 0xc791 << "".to_u << 0xc5c5 << "".to_u << 0xc740 << " '".to_u << 0xc77d << "".to_u << 0xae30 << "' ".to_u << 0xc804 << "".to_u << 0xc6a9 << "".to_u << 0xc785 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["permission name [name] syntax invalid: ", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xc774 << "".to_u << 0xb984 << " [{0}] ".to_u << 0xad6c << "".to_u << 0xbb38 << "".to_u << 0xc774 << " ".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ": ")]), Array.typed(Object).new(["Credential Class not followed by a Principal Class and Name", ("Principal ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << " ".to_u << 0xbc0f << " ".to_u << 0xc774 << "".to_u << 0xb984 << " ".to_u << 0xb2e4 << "".to_u << 0xc74c << "".to_u << 0xc5d0 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << " ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Principal Class not followed by a Principal Name", ("Principal ".to_u << 0xc774 << "".to_u << 0xb984 << " ".to_u << 0xb2e4 << "".to_u << 0xc74c << "".to_u << 0xc5d0 << " Principal ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Principal Name must be surrounded by quotes", ("Principal ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc740 << " ".to_u << 0xc778 << "".to_u << 0xc6a9 << " ".to_u << 0xbd80 << "".to_u << 0xd638 << "".to_u << 0xb85c << " ".to_u << 0xbb36 << "".to_u << 0xc5b4 << "".to_u << 0xc57c << " ".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Principal Name missing end quote", ("Principal ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc5d0 << " ".to_u << 0xb2eb << "".to_u << 0xb294 << " ".to_u << 0xc778 << "".to_u << 0xc6a9 << " ".to_u << 0xbd80 << "".to_u << 0xd638 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["PrivateCredentialPermission Principal Class can not be a wildcard (*) value if Principal Name is not a wildcard (*) value", ("PrivateCredentialPermission Principal ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb294 << " Principal ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc774 << " ".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << "(*) ".to_u << 0xac12 << "".to_u << 0xc774 << " ".to_u << 0xc544 << "".to_u << 0xb2cc << " ".to_u << 0xacbd << "".to_u << 0xc6b0 << " ".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << "(*) ".to_u << 0xac12 << "".to_u << 0xc774 << " ".to_u << 0xb420 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["CredOwner:\n\tPrincipal Class = class\n\tPrincipal Name = name", ("CredOwner:\n\tPrincipal ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << " = ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "\n\tPrincipal ".to_u << 0xc774 << "".to_u << 0xb984 << " = ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["provided null name", ("null ".to_u << 0xc774 << "".to_u << 0xb984 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["provided null keyword map", ("null ".to_u << 0xd0a4 << "".to_u << 0xc6cc << "".to_u << 0xb4dc << " ".to_u << 0xb9f5 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["provided null OID map", ("null OID ".to_u << 0xb9f5 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["invalid null AccessControlContext provided", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null AccessControlContext".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["invalid null action provided", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null ".to_u << 0xc791 << "".to_u << 0xc5c5 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["invalid null Class provided", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["Subject:\n", ("".to_u << 0xc81c << "".to_u << 0xbaa9 << ":\n")]), Array.typed(Object).new(["\tPrincipal: ", "\tPrincipal: "]), Array.typed(Object).new(["\tPublic Credential: ", ("\t".to_u << 0xacf5 << "".to_u << 0xac1c << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << ": ")]), Array.typed(Object).new(["\tPrivate Credentials inaccessible\n", ("\t".to_u << 0xac1c << "".to_u << 0xc778 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xc5d0 << " ".to_u << 0xc561 << "".to_u << 0xc138 << "".to_u << 0xc2a4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".\n")]), Array.typed(Object).new(["\tPrivate Credential: ", ("\t".to_u << 0xac1c << "".to_u << 0xc778 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << ": ")]), Array.typed(Object).new(["\tPrivate Credential inaccessible\n", ("\t".to_u << 0xac1c << "".to_u << 0xc778 << " ".to_u << 0xc778 << "".to_u << 0xc99d << "".to_u << 0xc11c << "".to_u << 0xc5d0 << " ".to_u << 0xc561 << "".to_u << 0xc138 << "".to_u << 0xc2a4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".\n")]), Array.typed(Object).new(["Subject is read-only", ("".to_u << 0xc81c << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xc77d << "".to_u << 0xae30 << " ".to_u << 0xc804 << "".to_u << 0xc6a9 << "".to_u << 0xc785 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["attempting to add an object which is not an instance of java.security.Principal to a Subject's Principal Set", ("java.security.Principal".to_u << 0xc758 << " ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xac00 << " ".to_u << 0xc544 << "".to_u << 0xb2cc << " ".to_u << 0xac1d << "".to_u << 0xccb4 << "".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xbaa9 << "".to_u << 0xc758 << " Principal ".to_u << 0xc138 << "".to_u << 0xd2b8 << "".to_u << 0xc5d0 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xb824 << "".to_u << 0xace0 << " ".to_u << 0xc2dc << "".to_u << 0xb3c4 << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << "")]), Array.typed(Object).new(["attempting to add an object which is not an instance of class", ("".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xc758 << " ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xac00 << " ".to_u << 0xc544 << "".to_u << 0xb2cc << " ".to_u << 0xac1d << "".to_u << 0xccb4 << "".to_u << 0xb97c << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xb824 << "".to_u << 0xace0 << " ".to_u << 0xc2dc << "".to_u << 0xb3c4 << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << "")]), Array.typed(Object).new(["LoginModuleControlFlag: ", "LoginModuleControlFlag: "]), Array.typed(Object).new(["Invalid null input: name", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null ".to_u << 0xc785 << "".to_u << 0xb825 << ": ".to_u << 0xc774 << "".to_u << 0xb984 << "")]), Array.typed(Object).new(["No LoginModules configured for name", ("{0}".to_u << 0xc5d0 << " ".to_u << 0xb300 << "".to_u << 0xd574 << " LoginModules".to_u << 0xac00 << " ".to_u << 0xad6c << "".to_u << 0xc131 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc558 << "".to_u << 0xc74c << "")]), Array.typed(Object).new(["invalid null Subject provided", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null ".to_u << 0xc81c << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["invalid null CallbackHandler provided", ("".to_u << 0xc798 << "".to_u << 0xbabb << "".to_u << 0xb41c << " null CallbackHandler".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["null subject - logout called before login", ("null ".to_u << 0xc81c << "".to_u << 0xbaa9 << " - ".to_u << 0xb85c << "".to_u << 0xadf8 << "".to_u << 0xc778 << " ".to_u << 0xc804 << "".to_u << 0xc5d0 << " ".to_u << 0xb85c << "".to_u << 0xadf8 << "".to_u << 0xc544 << "".to_u << 0xc6c3 << "".to_u << 0xc744 << " ".to_u << 0xd638 << "".to_u << 0xcd9c << "".to_u << 0xd588 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["unable to instantiate LoginModule, module, because it does not provide a no-argument constructor", ("".to_u << 0xc778 << "".to_u << 0xc218 << "".to_u << 0xac00 << " ".to_u << 0xc5c6 << "".to_u << 0xb294 << " ".to_u << 0xad6c << "".to_u << 0xc131 << "".to_u << 0xc790 << "".to_u << 0xb97c << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xd558 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xae30 << " ".to_u << 0xb54c << "".to_u << 0xbb38 << "".to_u << 0xc5d0 << " LoginModule, {0}".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xd654 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["unable to instantiate LoginModule", ("LoginModule".to_u << 0xc744 << " ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xd654 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["unable to instantiate LoginModule: ", ("LoginModule".to_u << 0xc744 << " ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xd654 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". ")]), Array.typed(Object).new(["unable to find LoginModule class: ", ("LoginModule ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb97c << " ".to_u << 0xcc3e << "".to_u << 0xc744 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ": ")]), Array.typed(Object).new(["unable to access LoginModule: ", ("LoginModule".to_u << 0xc5d0 << " ".to_u << 0xc561 << "".to_u << 0xc138 << "".to_u << 0xc2a4 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ": ")]), Array.typed(Object).new(["Login Failure: all modules ignored", ("".to_u << 0xb85c << "".to_u << 0xadf8 << "".to_u << 0xc778 << " ".to_u << 0xc2e4 << "".to_u << 0xd328 << ": ".to_u << 0xbaa8 << "".to_u << 0xb4e0 << " ".to_u << 0xbaa8 << "".to_u << 0xb4c8 << "".to_u << 0xc774 << " ".to_u << 0xbb34 << "".to_u << 0xc2dc << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["java.security.policy: error parsing policy:\n\tmessage", ("java.security.policy: {0}".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xad6c << "".to_u << 0xbb38 << " ".to_u << 0xbd84 << "".to_u << 0xc11d << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << " ".to_u << 0xc624 << "".to_u << 0xb958 << " ".to_u << 0xbc1c << "".to_u << 0xc0dd << ":\n\t{1}")]), Array.typed(Object).new(["java.security.policy: error adding Permission, perm:\n\tmessage", ("java.security.policy: {0} ".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << "".to_u << 0xc744 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << " ".to_u << 0xc624 << "".to_u << 0xb958 << " ".to_u << 0xbc1c << "".to_u << 0xc0dd << ":\n\t{1}")]), Array.typed(Object).new(["java.security.policy: error adding Entry:\n\tmessage", ("java.security.policy: ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc744 << " ".to_u << 0xcd94 << "".to_u << 0xac00 << "".to_u << 0xd558 << "".to_u << 0xb294 << " ".to_u << 0xc911 << " ".to_u << 0xc624 << "".to_u << 0xb958 << " ".to_u << 0xbc1c << "".to_u << 0xc0dd << ":\n\t{0}")]), Array.typed(Object).new(["alias name not provided (pe.name)", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xc81c << "".to_u << 0xacf5 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << "({0}).")]), Array.typed(Object).new(["unable to perform substitution on alias, suffix", ("".to_u << 0xbcc4 << "".to_u << 0xce6d << "{0}".to_u << 0xc5d0 << "".to_u << 0xc11c << " ".to_u << 0xb300 << "".to_u << 0xccb4 << " ".to_u << 0xc218 << "".to_u << 0xd589 << "".to_u << 0xc774 << " ".to_u << 0xbd88 << "".to_u << 0xac00 << "".to_u << 0xb2a5 << "".to_u << 0xd569 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["substitution value, prefix, unsupported", ("".to_u << 0xb300 << "".to_u << 0xccb4 << " ".to_u << 0xac12 << " {0}".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xc9c0 << "".to_u << 0xc6d0 << "".to_u << 0xb418 << "".to_u << 0xc9c0 << " ".to_u << 0xc54a << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["(", "("]), Array.typed(Object).new([")", ")"]), Array.typed(Object).new(["type can't be null", ("".to_u << 0xc720 << "".to_u << 0xd615 << "".to_u << 0xc740 << " null".to_u << 0xc77c << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["keystorePasswordURL can not be specified without also specifying keystore", ("Keystore ".to_u << 0xc9c0 << "".to_u << 0xc815 << " ".to_u << 0xc5c6 << "".to_u << 0xc774 << " keystorePasswordURL".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["expected keystore type", ("keystore ".to_u << 0xc720 << "".to_u << 0xd615 << "".to_u << 0xc774 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["expected keystore provider", ("keystore ".to_u << 0xacf5 << "".to_u << 0xae09 << "".to_u << 0xc790 << "".to_u << 0xac00 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["multiple Codebase expressions", ("".to_u << 0xbcf5 << "".to_u << 0xc218 << " Codebase ".to_u << 0xd45c << "".to_u << 0xd604 << "".to_u << 0xc2dd << "")]), Array.typed(Object).new(["multiple SignedBy expressions", ("".to_u << 0xbcf5 << "".to_u << 0xc218 << " SignedBy ".to_u << 0xd45c << "".to_u << 0xd604 << "".to_u << 0xc2dd << "")]), Array.typed(Object).new(["SignedBy has empty alias", ("SignedBy".to_u << 0xc5d0 << " ".to_u << 0xbe44 << "".to_u << 0xc5b4 << " ".to_u << 0xc788 << "".to_u << 0xb294 << " ".to_u << 0xbcc4 << "".to_u << 0xce6d << "".to_u << 0xc774 << " ".to_u << 0xc788 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["can not specify Principal with a wildcard class without a wildcard name", ("".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << " ".to_u << 0xc774 << "".to_u << 0xb984 << " ".to_u << 0xc5c6 << "".to_u << 0xc774 << " ".to_u << 0xc640 << "".to_u << 0xc77c << "".to_u << 0xb4dc << "".to_u << 0xce74 << "".to_u << 0xb4dc << " ".to_u << 0xd074 << "".to_u << 0xb798 << "".to_u << 0xc2a4 << "".to_u << 0xb97c << " ".to_u << 0xac00 << "".to_u << 0xc9c4 << " Principal".to_u << 0xc744 << " ".to_u << 0xc9c0 << "".to_u << 0xc815 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["expected codeBase or SignedBy or Principal", ("codeBase, SignedBy ".to_u << 0xb610 << "".to_u << 0xb294 << " Principal".to_u << 0xc774 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["expected permission entry", ("".to_u << 0xc0ac << "".to_u << 0xc6a9 << " ".to_u << 0xad8c << "".to_u << 0xd55c << " ".to_u << 0xd56d << "".to_u << 0xbaa9 << "".to_u << 0xc774 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["number ", ("".to_u << 0xbc88 << "".to_u << 0xd638 << " ")]), Array.typed(Object).new(["expected [expect], read [end of file]", ("[{0}]".to_u << 0xc774 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". [EOF]".to_u << 0xb97c << " ".to_u << 0xc77d << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["expected [;], read [end of file]", ("[;]".to_u << 0xc774 << " ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xb429 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ". [EOF]".to_u << 0xb97c << " ".to_u << 0xc77d << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["line number: msg", ("".to_u << 0xd589 << " {0}: {1}")]), Array.typed(Object).new(["line number: expected [expect], found [actual]", ("".to_u << 0xd589 << " {0}: [{1}]".to_u << 0xc744 << "(".to_u << 0xb97c << ") ".to_u << 0xc608 << "".to_u << 0xc0c1 << "".to_u << 0xd588 << "".to_u << 0xb294 << "".to_u << 0xb370 << ", [{2}]".to_u << 0xc774 << "(".to_u << 0xac00 << ") ".to_u << 0xbc1c << "".to_u << 0xacac << "".to_u << 0xb418 << "".to_u << 0xc5c8 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["null principalClass or principalName", ("principalClass ".to_u << 0xb610 << "".to_u << 0xb294 << " principalName".to_u << 0xc774 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")]), Array.typed(Object).new(["PKCS11 Token [providerName] Password: ", ("PKCS11 ".to_u << 0xd1a0 << "".to_u << 0xd070 << " [{0}] ".to_u << 0xc554 << "".to_u << 0xd638 << ": ")]), Array.typed(Object).new(["unable to instantiate Subject-based policy", ("".to_u << 0xc8fc << "".to_u << 0xc81c << " ".to_u << 0xae30 << "".to_u << 0xbc18 << " ".to_u << 0xc815 << "".to_u << 0xcc45 << "".to_u << 0xc744 << " ".to_u << 0xc778 << "".to_u << 0xc2a4 << "".to_u << 0xd134 << "".to_u << 0xc2a4 << "".to_u << 0xd654 << "".to_u << 0xd560 << " ".to_u << 0xc218 << " ".to_u << 0xc5c6 << "".to_u << 0xc2b5 << "".to_u << 0xb2c8 << "".to_u << 0xb2e4 << ".")])]) }
      const_attr_reader  :Contents
    }
    
    typesig { [] }
    # Returns the contents of this <code>ResourceBundle</code>.
    # 
    # <p>
    # 
    # @return the contents of this <code>ResourceBundle</code>.
    def get_contents
      return Contents
    end
    
    typesig { [] }
    def initialize
      super()
    end
    
    private
    alias_method :initialize__resources_ko, :initialize
  end
  
end
