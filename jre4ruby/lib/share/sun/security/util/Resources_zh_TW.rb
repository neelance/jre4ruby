require "rjava"

# Copyright 2001-2006 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
# 
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
# 
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
module Sun::Security::Util
  module Resources_zh_TWImports
    class_module.module_eval {
      include ::Java::Lang
      include ::Sun::Security::Util
    }
  end
  
  # <p> This class represents the <code>ResourceBundle</code>
  # for javax.security.auth and sun.security.
  class Resources_zh_TW < Java::Util::ListResourceBundle
    include_class_members Resources_zh_TWImports
    
    class_module.module_eval {
      # shared (from jarsigner)
      # shared (from keytool)
      # keytool
      # Translators of the following 5 pairs, ATTENTION:
      # the next 5 string pairs are meant to be combined into 2 paragraphs,
      # 1+3+4 and 2+3+5. make sure your translation also does.
      # rest is same as -certreq starting from -keystore *
      # {"-export      [-v] [-rfc] [-protected]",
      # "-export      [-v] [-rfc] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # {"-genkey      [-v] [-protected]",
      # "-genkey      [-v] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-identitydb  [-v] [-protected]",
      # "-identitydb  [-v] [-protected]"},
      # {"\t     [-file <idb_file>]", "\t     [-file <\u8fa8\u8b58\u8cc7\u6599\u5eab\u6a94\u6848>]"},
      # rest is same as -certreq starting from -keystore *
      # {"-import      [-v] [-noprompt] [-trustcacerts] [-protected]",
      # "-import      [-v] [-noprompt] [-trustcacerts] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # \u884c\u592a\u9577\uff0c\u8acb\u5206\u70ba 2 \u884c
      # rest is same as -certreq starting from -keystore *
      # {"-keyclone    [-v] [-protected]",
      # "-keyclone    [-v] [-protected]"},
      # {"\t     [-alias <alias>] -dest <dest_alias>",
      # "\t     [-alias <\u5225\u540d>] -dest <\u76ee\u6a19\u5225\u540d>"},
      # {"\t     [-keypass <keypass>] [-new <new_keypass>]",
      # "\t     [-keypass <\u4e3b\u5bc6\u78bc>] [-new <\u65b0\u4e3b\u5bc6\u78bc>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-selfcert    [-v] [-protected]",
      # "-selfcert    [-v] [-protected]"},
      # {"\t     [-dname <dname>] [-validity <valDays>]",
      # "\t     [-dname <\u7db2\u57df\u540d\u7a31>] [-validity <\u6709\u6548\u5929\u6578>]"},
      # {"\t     [-keypass <keypass>] [-sigalg <sigalg>]",
      # "\t     [-keypass <\u4e3b\u5bc6\u78bc>] [-sigalg <\u7c3d\u7ae0\u6f14\u7b97\u6cd5>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # policytool
      # javax.security.auth.PrivateCredentialPermission
      # javax.security.auth.x500
      # javax.security.auth.Subject
      # javax.security.auth.login.AppConfigurationEntry
      # javax.security.auth.login.LoginContext
      # sun.security.provider.PolicyFile
      # sun.security.provider.PolicyParser
      # sun.security.pkcs11.SunPKCS11
      # --- DEPRECATED ---
      # javax.security.auth.Policy
      const_set_lazy(:Contents) { Array.typed(Array.typed(Object)).new([Array.typed(Object).new([" ", " "]), Array.typed(Object).new(["  ", "  "]), Array.typed(Object).new(["      ", "      "]), Array.typed(Object).new([", ", ", "]), Array.typed(Object).new(["\n", "\n"]), Array.typed(Object).new(["*******************************************", "*******************************************"]), Array.typed(Object).new(["*******************************************\n\n", "*******************************************\n\n"]), Array.typed(Object).new(["keytool error: ", ("keytool ".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Illegal option:  ", ("".to_u << 0x975e << "".to_u << 0x6cd5 << "".to_u << 0x9078 << "".to_u << 0x9805 << "".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Try keytool -help", ("".to_u << 0x5617 << "".to_u << 0x8a66 << " keytool -help")]), Array.typed(Object).new(["Command option <flag> needs an argument.", ("".to_u << 0x6307 << "".to_u << 0x4ee4 << "".to_u << 0x9078 << "".to_u << 0x9805 << " {0} ".to_u << 0x9700 << "".to_u << 0x8981 << "".to_u << 0x5f15 << "".to_u << 0x6578 << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified <command> value.", ("".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0xfe30 << "PKCS12 ".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x4e0d << "".to_u << 0x652f << "".to_u << 0x63f4 << "".to_u << 0x4e0d << "".to_u << 0x540c << "".to_u << 0x7684 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x548c << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x3002 << "".to_u << 0x5ffd << "".to_u << 0x7565 << "".to_u << 0x4f7f << "".to_u << 0x7528 << "".to_u << 0x8005 << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x7684 << " {0} ".to_u << 0x503c << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["-keystore must be NONE if -storetype is {0}", ("".to_u << 0x5982 << "".to_u << 0x679c << " -storetype ".to_u << 0x70ba << " {0}".to_u << 0xff0c << "".to_u << 0x5247 << " -keystore ".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x70ba << " NONE")]), Array.typed(Object).new(["Too may retries, program terminated", ("".to_u << 0x91cd << "".to_u << 0x8a66 << "".to_u << 0x6b21 << "".to_u << 0x6578 << "".to_u << 0x592a << "".to_u << 0x591a << "".to_u << 0xff0c << "".to_u << 0x7a0b << "".to_u << 0x5f0f << "".to_u << 0x5df2 << "".to_u << 0x7d42 << "".to_u << 0x6b62 << "")]), Array.typed(Object).new(["-storepasswd and -keypasswd commands not supported if -storetype is {0}", ("".to_u << 0x5982 << "".to_u << 0x679c << " -storetype ".to_u << 0x70ba << " {0}".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x652f << "".to_u << 0x63f4 << " -storepasswd ".to_u << 0x548c << " -keypasswd ".to_u << 0x6307 << "".to_u << 0x4ee4 << "")]), Array.typed(Object).new(["-keypasswd commands not supported if -storetype is PKCS12", ("".to_u << 0x5982 << "".to_u << 0x679c << " -storetype ".to_u << 0x70ba << " PKCS12".to_u << 0xff0c << "".to_u << 0x5247 << " -keypasswd ".to_u << 0x6307 << "".to_u << 0x4ee4 << "".to_u << 0x4e0d << "".to_u << 0x53d7 << "".to_u << 0x652f << "".to_u << 0x63f4 << "")]), Array.typed(Object).new(["-keypass and -new can not be specified if -storetype is {0}", ("".to_u << 0x5982 << "".to_u << 0x679c << " -storetype ".to_u << 0x70ba << " {0}".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -keypass ".to_u << 0x548c << " -new")]), Array.typed(Object).new(["if -protected is specified, then -storepass, -keypass, and -new must not be specified", ("".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -protected".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -storepass".to_u << 0x3001 << "-keypass ".to_u << 0x548c << " -new")]), Array.typed(Object).new(["if -srcprotected is specified, then -srcstorepass and -srckeypass must not be specified", ("".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -srcprotected".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -srcstorepass ".to_u << 0x548c << " -srckeypass")]), Array.typed(Object).new(["if keystore is not password protected, then -storepass, -keypass, and -new must not be specified", ("".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5eab << "".to_u << 0x4e0d << "".to_u << 0x53d7 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x4fdd << "".to_u << 0x8b77 << "".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -storepass".to_u << 0x3001 << "-keypass ".to_u << 0x548c << " -new")]), Array.typed(Object).new(["if source keystore is not password protected, then -srcstorepass and -srckeypass must not be specified", ("".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5eab << "".to_u << 0x4e0d << "".to_u << 0x53d7 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x4fdd << "".to_u << 0x8b77 << "".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -srcstorepass ".to_u << 0x548c << " -srckeypass")]), Array.typed(Object).new(["Validity must be greater than zero", ("".to_u << 0x6709 << "".to_u << 0x6548 << "".to_u << 0x6027 << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x6bd4 << "".to_u << 0x96f6 << "".to_u << 0x9084 << "".to_u << 0x5927 << "")]), Array.typed(Object).new(["provName not a provider", ("{0} ".to_u << 0x4e0d << "".to_u << 0x662f << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "")]), Array.typed(Object).new(["Usage error: no command provided", ("".to_u << 0x7528 << "".to_u << 0x6cd5 << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0xff1a << "".to_u << 0x672a << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x6307 << "".to_u << 0x4ee4 << "")]), Array.typed(Object).new(["Usage error, <arg> is not a legal command", ("".to_u << 0x7528 << "".to_u << 0x6cd5 << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0xff0c << "{0} ".to_u << 0x4e0d << "".to_u << 0x662f << "".to_u << 0x5408 << "".to_u << 0x6cd5 << "".to_u << 0x6307 << "".to_u << 0x4ee4 << "")]), Array.typed(Object).new(["Source keystore file exists, but is empty: ", ("".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0xff0c << "".to_u << 0x4f46 << "".to_u << 0x70ba << "".to_u << 0x7a7a << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Please specify -srckeystore", ("".to_u << 0x8acb << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -srckeystore")]), Array.typed(Object).new(["Must not specify both -v and -rfc with 'list' command", ("".to_u << 0x4e0d << "".to_u << 0x5f97 << "".to_u << 0x4ee5 << "".to_u << 0x300c << "".to_u << 0x6e05 << "".to_u << 0x55ae << "".to_u << 0x300d << "".to_u << 0x6307 << "".to_u << 0x4ee4 << "".to_u << 0x6307 << "".to_u << 0x5b9a << " -v ".to_u << 0x53ca << " -rfc")]), Array.typed(Object).new(["Key password must be at least 6 characters", ("".to_u << 0x95dc << "".to_u << 0x9375 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["New password must be at least 6 characters", ("".to_u << 0x65b0 << "".to_u << 0x7684 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["Keystore file exists, but is empty: ", ("Keystore ".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0xff0c << "".to_u << 0x4f46 << "".to_u << 0x70ba << "".to_u << 0x7a7a << "".to_u << 0x767d << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Keystore file does not exist: ", ("Keystore ".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0x4e0d << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Must specify destination alias", ("".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x76ee << "".to_u << 0x7684 << "".to_u << 0x5730 << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["Must specify alias", ("".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["Keystore password must be at least 6 characters", ("Keystore ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["Enter keystore password:  ", ("".to_u << 0x8f38 << "".to_u << 0x5165 << " keystore ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Enter source keystore password:  ", ("".to_u << 0x8acb << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Enter destination keystore password:  ", ("".to_u << 0x8acb << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Keystore password is too short - must be at least 6 characters", ("Keystore ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x592a << "".to_u << 0x77ed << " - ".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["Unknown Entry Type", ("".to_u << 0x4e0d << "".to_u << 0x660e << "".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x985e << "".to_u << 0x578b << "")]), Array.typed(Object).new(["Too many failures. Alias not changed", ("".to_u << 0x592a << "".to_u << 0x591a << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0x3002 << "".to_u << 0x672a << "".to_u << 0x8b8a << "".to_u << 0x66f4 << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["Entry for alias <alias> successfully imported.", ("".to_u << 0x5df2 << "".to_u << 0x6210 << "".to_u << 0x529f << "".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Entry for alias <alias> not imported.", ("".to_u << 0x672a << "".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Problem importing entry for alias <alias>: <exception>.\nEntry for alias <alias> not imported.", ("".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x6642 << "".to_u << 0x51fa << "".to_u << 0x73fe << "".to_u << 0x554f << "".to_u << 0x984c << "".to_u << 0xff1a << "{1}".to_u << 0x3002 << "\n".to_u << 0x672a << "".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Import command completed:  <ok> entries successfully imported, <fail> entries failed or cancelled", ("".to_u << 0x5df2 << "".to_u << 0x5b8c << "".to_u << 0x6210 << "".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x6307 << "".to_u << 0x4ee4 << "".to_u << 0xff1a << "".to_u << 0x6210 << "".to_u << 0x529f << "".to_u << 0x532f << "".to_u << 0x5165 << " {0} ".to_u << 0x500b << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0xff0c << "{1} ".to_u << 0x500b << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x5931 << "".to_u << 0x6557 << "".to_u << 0x6216 << "".to_u << 0x5df2 << "".to_u << 0x53d6 << "".to_u << 0x6d88 << "")]), Array.typed(Object).new(["Warning: Overwriting existing alias <alias> in destination keystore", ("".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0xff1a << "".to_u << 0x6b63 << "".to_u << 0x5728 << "".to_u << 0x8986 << "".to_u << 0x5beb << "".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x4e2d << "".to_u << 0x7684 << "".to_u << 0x73fe << "".to_u << 0x6709 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0}")]), Array.typed(Object).new(["Existing entry alias <alias> exists, overwrite? [no]:  ", ("".to_u << 0x73fe << "".to_u << 0x6709 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0xff0c << "".to_u << 0x662f << "".to_u << 0x5426 << "".to_u << 0x8986 << "".to_u << 0x5beb << "".to_u << 0xff1f << "[".to_u << 0x5426 << "]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Too many failures - try later", ("".to_u << 0x592a << "".to_u << 0x591a << "".to_u << 0x932f << "".to_u << 0x8aa4 << " - ".to_u << 0x8acb << "".to_u << 0x7a0d << "".to_u << 0x5f8c << "".to_u << 0x518d << "".to_u << 0x8a66 << "")]), Array.typed(Object).new(["Certification request stored in file <filename>", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x8981 << "".to_u << 0x6c42 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0x6a94 << "".to_u << 0x6848 << " <{0}>")]), Array.typed(Object).new(["Submit this to your CA", ("".to_u << 0x5c07 << "".to_u << 0x6b64 << "".to_u << 0x63d0 << "".to_u << 0x9001 << "".to_u << 0x81f3 << "".to_u << 0x60a8 << "".to_u << 0x7684 << " CA")]), Array.typed(Object).new(["if alias not specified, destalias, srckeypass, and destkeypass must not be specified", ("".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x672a << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0xff0c << "".to_u << 0x5247 << "".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x6307 << "".to_u << 0x5b9a << " destalias".to_u << 0x3001 << "srckeypass ".to_u << 0x53ca << " destkeypass")]), Array.typed(Object).new(["Certificate stored in file <filename>", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0x6a94 << "".to_u << 0x6848 << " <{0}>")]), Array.typed(Object).new(["Certificate reply was installed in keystore", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x5df2 << "".to_u << 0x5b89 << "".to_u << 0x88dd << "".to_u << 0x5728 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Certificate reply was not installed in keystore", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x672a << "".to_u << 0x5b89 << "".to_u << 0x88dd << "".to_u << 0x5728 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Certificate was added to keystore", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x5df2 << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x81f3 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Certificate was not added to keystore", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x672a << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x81f3 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["[Storing ksfname]", ("[".to_u << 0x5132 << "".to_u << 0x5b58 << " {0}]")]), Array.typed(Object).new(["alias has no public key (certificate)", ("{0} ".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0xff08 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0xff09 << "")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x53d6 << "".to_u << 0x5f97 << "".to_u << 0x7c3d << "".to_u << 0x540d << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << "")]), Array.typed(Object).new(["Alias <alias> does not exist", ("".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x4e0d << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Alias <alias> has no certificate", ("".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "")]), Array.typed(Object).new(["Key pair not generated, alias <alias> already exists", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x5efa << "".to_u << 0x7acb << "".to_u << 0x9375 << "".to_u << 0x503c << "".to_u << 0x5c0d << "".to_u << 0xff0c << "".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x53d6 << "".to_u << 0x5f97 << "".to_u << 0x7c3d << "".to_u << 0x540d << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << "")]), Array.typed(Object).new(["Generating keysize bit keyAlgName key pair and self-signed certificate (sigAlgName) with a validity of validality days\n\tfor: x500Name", ("".to_u << 0x91dd << "".to_u << 0x5c0d << " {4} ".to_u << 0x7522 << "".to_u << 0x751f << "".to_u << 0x6709 << "".to_u << 0x6548 << "".to_u << 0x671f << "".to_u << 0x70ba << " {3} ".to_u << 0x5929 << "".to_u << 0x7684 << " {0} ".to_u << 0x4f4d << "".to_u << 0x5143 << " {1} ".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5c0d << "".to_u << 0x4ee5 << "".to_u << 0x53ca << "".to_u << 0x81ea << "".to_u << 0x6211 << "".to_u << 0x7c3d << "".to_u << 0x7f72 << "".to_u << 0x6191 << "".to_u << 0x8b49 << " ({2})\n\t")]), Array.typed(Object).new(["Enter key password for <alias>", ("".to_u << 0x8f38 << "".to_u << 0x5165 << " <{0}> ".to_u << 0x7684 << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "")]), Array.typed(Object).new(["\t(RETURN if same as keystore password):  ", ("\t".to_u << 0xff08 << "RETURN ".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x548c << " keystore ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x76f8 << "".to_u << 0x540c << "".to_u << 0xff09 << "".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Key password is too short - must be at least 6 characters", ("".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x592a << "".to_u << 0x77ed << " - ".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["Too many failures - key not added to keystore", ("".to_u << 0x592a << "".to_u << 0x591a << "".to_u << 0x932f << "".to_u << 0x8aa4 << " - ".to_u << 0x9375 << "".to_u << 0x503c << "".to_u << 0x672a << "".to_u << 0x88ab << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x81f3 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Destination alias <dest> already exists", ("".to_u << 0x76ee << "".to_u << 0x7684 << "".to_u << 0x5730 << "".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Password is too short - must be at least 6 characters", ("".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x592a << "".to_u << 0x77ed << " - ".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x81f3 << "".to_u << 0x5c11 << "".to_u << 0x70ba << " 6 ".to_u << 0x500b << "".to_u << 0x5b57 << "".to_u << 0x5143 << "")]), Array.typed(Object).new(["Too many failures. Key entry not cloned", ("".to_u << 0x592a << "".to_u << 0x591a << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0x3002 << " ".to_u << 0x9375 << "".to_u << 0x503c << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x672a << "".to_u << 0x88ab << "".to_u << 0x8907 << "".to_u << 0x88fd << "")]), Array.typed(Object).new(["key password for <alias>", ("<{0}> ".to_u << 0x7684 << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "")]), Array.typed(Object).new(["Keystore entry for <id.getName()> already exists", ("<{0}> ".to_u << 0x7684 << " Keystore ".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Creating keystore entry for <id.getName()> ...", ("".to_u << 0x5efa << "".to_u << 0x7acb << " <{0}> ".to_u << 0x7684 << " keystore ".to_u << 0x8f38 << "".to_u << 0x5165 << "...")]), Array.typed(Object).new(["No entries from identity database added", ("".to_u << 0x5f9e << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x8fa8 << "".to_u << 0x8b58 << "".to_u << 0x8cc7 << "".to_u << 0x6599 << "".to_u << 0x5eab << "".to_u << 0x4e2d << "".to_u << 0xff0c << "".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["Alias name: alias", ("".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << " {0}")]), Array.typed(Object).new(["Creation date: keyStore.getCreationDate(alias)", ("".to_u << 0x5efa << "".to_u << 0x7acb << "".to_u << 0x65e5 << "".to_u << 0x671f << "".to_u << 0xff1a << " {0,date}")]), Array.typed(Object).new(["alias, keyStore.getCreationDate(alias), ", "{0}, {1,date}, "]), Array.typed(Object).new(["alias, ", "{0}, "]), Array.typed(Object).new(["Entry type: <type>", ("".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xff1a << "{0}")]), Array.typed(Object).new(["Certificate chain length: ", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x93c8 << "".to_u << 0x9577 << "".to_u << 0x5ea6 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Certificate[(i + 1)]:", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << " [{0,number,integer}]:")]), Array.typed(Object).new(["Certificate fingerprint (MD5): ", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x6307 << "".to_u << 0x7d0b << " (MD5)".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Entry type: trustedCertEntry\n", ("".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xff1a << " trustedCertEntry\n")]), Array.typed(Object).new(["trustedCertEntry,", "trustedCertEntry,"]), Array.typed(Object).new(["Keystore type: ", ("Keystore ".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Keystore provider: ", ("Keystore ".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entry", ("".to_u << 0x60a8 << "".to_u << 0x7684 << " keystore ".to_u << 0x5305 << "".to_u << 0x542b << " {0,number,integer} ".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entries", ("".to_u << 0x60a8 << "".to_u << 0x7684 << " keystore ".to_u << 0x5305 << "".to_u << 0x542b << " {0,number,integer} ".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["Failed to parse input", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x8a9e << "".to_u << 0x6cd5 << "".to_u << 0x5206 << "".to_u << 0x6790 << "".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["Empty input", ("".to_u << 0x7a7a << "".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["Not X.509 certificate", ("".to_u << 0x975e << " X.509 ".to_u << 0x8a8d << "".to_u << 0x8b49 << "")]), Array.typed(Object).new(["Cannot derive signature algorithm", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x53d6 << "".to_u << 0x5f97 << "".to_u << 0x7c3d << "".to_u << 0x540d << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << "")]), Array.typed(Object).new(["alias has no public key", ("{0} ".to_u << 0x7121 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "")]), Array.typed(Object).new(["alias has no X.509 certificate", ("{0} ".to_u << 0x7121 << " X.509 ".to_u << 0x8a8d << "".to_u << 0x8b49 << "")]), Array.typed(Object).new(["New certificate (self-signed):", ("".to_u << 0x65b0 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0xff08 << "".to_u << 0x81ea << "".to_u << 0x6211 << "".to_u << 0x7c3d << "".to_u << 0x7f72 << "".to_u << 0xff09 << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Reply has no certificates", ("".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x4e0d << "".to_u << 0x542b << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "")]), Array.typed(Object).new(["Certificate not imported, alias <alias> already exists", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x672a << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0xff0c << "".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Input not an X.509 certificate", ("".to_u << 0x6240 << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x7684 << "".to_u << 0x4e0d << "".to_u << 0x662f << "".to_u << 0x4e00 << "".to_u << 0x500b << " X.509 ".to_u << 0x8a8d << "".to_u << 0x8b49 << "")]), Array.typed(Object).new(["Certificate already exists in keystore under alias <trustalias>", ("".to_u << 0x5728 << " <{0}> ".to_u << 0x7684 << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x4e4b << "".to_u << 0x4e0b << "".to_u << 0xff0c << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << " keystore ".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Do you still want to add it? [no]:  ", ("".to_u << 0x60a8 << "".to_u << 0x4ecd << "".to_u << 0x7136 << "".to_u << 0x60f3 << "".to_u << 0x8981 << "".to_u << 0x5c07 << "".to_u << 0x4e4b << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x55ce << "".to_u << 0xff1f << " [".to_u << 0x5426 << "]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Certificate already exists in system-wide CA keystore under alias <trustalias>", ("".to_u << 0x5728 << " <{0}> ".to_u << 0x7684 << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x4e4b << "".to_u << 0x4e0b << "".to_u << 0xff0c << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x5df2 << "".to_u << 0x7d93 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0x65bc << " CA keystore ".to_u << 0x6574 << "".to_u << 0x500b << "".to_u << 0x7cfb << "".to_u << 0x7d71 << "".to_u << 0x4e4b << "".to_u << 0x4e2d << "")]), Array.typed(Object).new(["Do you still want to add it to your own keystore? [no]:  ", ("".to_u << 0x60a8 << "".to_u << 0x4ecd << "".to_u << 0x7136 << "".to_u << 0x60f3 << "".to_u << 0x8981 << "".to_u << 0x5c07 << "".to_u << 0x4e4b << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x81f3 << "".to_u << 0x81ea << "".to_u << 0x5df1 << "".to_u << 0x7684 << " keystore ".to_u << 0x55ce << "".to_u << 0xff1f << " [".to_u << 0x5426 << "]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Trust this certificate? [no]:  ", ("".to_u << 0x4fe1 << "".to_u << 0x4efb << "".to_u << 0x9019 << "".to_u << 0x500b << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0xff1f << " [".to_u << 0x5426 << "]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["YES", ("".to_u << 0x662f << "")]), Array.typed(Object).new(["New prompt: ", ("".to_u << 0x65b0 << " {0}".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Passwords must differ", ("".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x662f << "".to_u << 0x4e0d << "".to_u << 0x540c << "".to_u << 0x7684 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "")]), Array.typed(Object).new(["Re-enter new prompt: ", ("".to_u << 0x91cd << "".to_u << 0x65b0 << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x65b0 << " {0}".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Re-enter new password: ", ("".to_u << 0x91cd << "".to_u << 0x65b0 << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x65b0 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ": ")]), Array.typed(Object).new(["They don't match. Try again", ("".to_u << 0x5b83 << "".to_u << 0x5011 << "".to_u << 0x4e0d << "".to_u << 0x76f8 << "".to_u << 0x7b26 << "".to_u << 0x3002 << "".to_u << 0x8acb << "".to_u << 0x91cd << "".to_u << 0x8a66 << "")]), Array.typed(Object).new(["Enter prompt alias name:  ", ("".to_u << 0x8f38 << "".to_u << 0x5165 << " {0} ".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Enter new alias name\t(RETURN to cancel import for this entry):  ", ("".to_u << 0x8acb << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x65b0 << "".to_u << 0x7684 << "".to_u << 0x5225 << "".to_u << 0x540d << "\t(RETURN ".to_u << 0x4ee5 << "".to_u << 0x53d6 << "".to_u << 0x6d88 << "".to_u << 0x532f << "".to_u << 0x5165 << "".to_u << 0x6b64 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x7684 << "".to_u << 0x5225 << "".to_u << 0x540d << ")".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Enter alias name:  ", ("".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["\t(RETURN if same as for <otherAlias>)", ("\t".to_u << 0xff08 << "RETURN ".to_u << 0x5982 << "".to_u << 0x679c << "".to_u << 0x548c << " <{0}> ".to_u << 0x7684 << "".to_u << 0x76f8 << "".to_u << 0x540c << "".to_u << 0xff09 << "")]), Array.typed(Object).new(["*PATTERN* printX509Cert", ("".to_u << 0x6240 << "".to_u << 0x6709 << "".to_u << 0x8005 << "".to_u << 0xff1a << "{0}\n".to_u << 0x6838 << "".to_u << 0x767c << "".to_u << 0x8005 << "".to_u << 0xff1a << "{1}\n".to_u << 0x5e8f << "".to_u << 0x865f << "".to_u << 0xff1a << "{2}\n".to_u << 0x81ea << "".to_u << 0x4ee5 << "".to_u << 0x4e0b << "".to_u << 0x65e5 << "".to_u << 0x671f << "".to_u << 0x958b << "".to_u << 0x59cb << "".to_u << 0x751f << "".to_u << 0x6548 << "".to_u << 0xff1a << "{3}".to_u << 0xff0c << "".to_u << 0x76f4 << "".to_u << 0x5230 << "".to_u << 0xff1a << "{4}\n".to_u << 0x6191 << "".to_u << 0x8b49 << "".to_u << 0x6307 << "".to_u << 0x7d0b << "".to_u << 0xff1a << "\n\tMD5".to_u << 0xff1a << "{5}\n\tSHA1".to_u << 0xff1a << "{6}\n\t".to_u << 0x7c3d << "".to_u << 0x540d << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << "{7}\n\t".to_u << 0x7248 << "".to_u << 0x672c << "".to_u << 0xff1a << "{8}")]), Array.typed(Object).new(["What is your first and last name?", ("".to_u << 0x60a8 << "".to_u << 0x7684 << "".to_u << 0x540d << "".to_u << 0x5b57 << "".to_u << 0x8207 << "".to_u << 0x59d3 << "".to_u << 0x6c0f << "".to_u << 0x70ba << "".to_u << 0x4f55 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["What is the name of your organizational unit?", ("".to_u << 0x60a8 << "".to_u << 0x7684 << "".to_u << 0x7de8 << "".to_u << 0x5236 << "".to_u << 0x55ae << "".to_u << 0x4f4d << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x70ba << "".to_u << 0x4f55 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["What is the name of your organization?", ("".to_u << 0x60a8 << "".to_u << 0x7684 << "".to_u << 0x7d44 << "".to_u << 0x7e54 << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x70ba << "".to_u << 0x4f55 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["What is the name of your City or Locality?", ("".to_u << 0x60a8 << "".to_u << 0x6240 << "".to_u << 0x5728 << "".to_u << 0x7684 << "".to_u << 0x57ce << "".to_u << 0x5e02 << "".to_u << 0x6216 << "".to_u << 0x5730 << "".to_u << 0x5340 << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x70ba << "".to_u << 0x4f55 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["What is the name of your State or Province?", ("".to_u << 0x60a8 << "".to_u << 0x6240 << "".to_u << 0x5728 << "".to_u << 0x7684 << "".to_u << 0x5dde << "".to_u << 0x53ca << "".to_u << 0x7701 << "".to_u << 0x4efd << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x70ba << "".to_u << 0x4f55 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["What is the two-letter country code for this unit?", ("".to_u << 0x8a72 << "".to_u << 0x55ae << "".to_u << 0x4f4d << "".to_u << 0x7684 << "".to_u << 0x4e8c << "".to_u << 0x5b57 << "".to_u << 0x570b << "".to_u << 0x78bc << "".to_u << 0x70ba << "".to_u << 0x4f55 << "")]), Array.typed(Object).new(["Is <name> correct?", ("{0} ".to_u << 0x6b63 << "".to_u << 0x78ba << "".to_u << 0x55ce << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["no", ("".to_u << 0x5426 << "")]), Array.typed(Object).new(["yes", ("".to_u << 0x662f << "")]), Array.typed(Object).new(["y", "y"]), Array.typed(Object).new(["  [defaultValue]:  ", ("  [{0}]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["Alias <alias> has no key", ("".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "")]), Array.typed(Object).new(["Alias <alias> references an entry type that is not a private key entry.  The -keyclone command only supports cloning of private key entries", ("".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x6240 << "".to_u << 0x53c3 << "".to_u << 0x7167 << "".to_u << 0x7684 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x4e0d << "".to_u << 0x662f << "".to_u << 0x79c1 << "".to_u << 0x5bc6 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0x3002 << "-keyclone ".to_u << 0x6307 << "".to_u << 0x4ee4 << "".to_u << 0x50c5 << "".to_u << 0x652f << "".to_u << 0x63f4 << "".to_u << 0x79c1 << "".to_u << 0x5bc6 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x7684 << "".to_u << 0x8907 << "".to_u << 0x88fd << "")]), Array.typed(Object).new(["*****************  WARNING WARNING WARNING  *****************", ("***************** ".to_u << 0x8b66 << "".to_u << 0x544a << " ".to_u << 0x8b66 << "".to_u << 0x544a << " ".to_u << 0x8b66 << "".to_u << 0x544a << "  *****************")]), Array.typed(Object).new(["* The integrity of the information stored in your keystore  *", ("* ".to_u << 0x8cc7 << "".to_u << 0x6599 << "".to_u << 0x7684 << "".to_u << 0x5b8c << "".to_u << 0x6574 << "".to_u << 0x6027 << "".to_u << 0x5df2 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0x60a8 << "".to_u << 0x7684 << " keystore ".to_u << 0x4e2d << "  *")]), Array.typed(Object).new(["* The integrity of the information stored in the srckeystore*", ("* ".to_u << 0x5b8c << "".to_u << 0x6574 << "".to_u << 0x7684 << "".to_u << 0x8cc7 << "".to_u << 0x8a0a << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5728 << " srckeystore ".to_u << 0x4e2d << " *")]), Array.typed(Object).new(["* has NOT been verified!  In order to verify its integrity, *", ("* ".to_u << 0x5c1a << "".to_u << 0x672a << "".to_u << 0x88ab << "".to_u << 0x9a57 << "".to_u << 0x8b49 << "".to_u << 0xff01 << "  ".to_u << 0x70ba << "".to_u << 0x4e86 << "".to_u << 0x9a57 << "".to_u << 0x8b49 << "".to_u << 0x5176 << "".to_u << 0x5b8c << "".to_u << 0x6574 << "".to_u << 0x6027 << "".to_u << 0xff0c << " *")]), Array.typed(Object).new(["* you must provide your keystore password.                  *", ("* ".to_u << 0x60a8 << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x60a8 << " keystore ".to_u << 0x7684 << "".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x3002 << "                  *")]), Array.typed(Object).new(["* you must provide the srckeystore password.                *", ("* ".to_u << 0x60a8 << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x63d0 << "".to_u << 0x4f9b << " srckeystore ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0x3002 << "                *")]), Array.typed(Object).new(["Certificate reply does not contain public key for <alias>", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x4e26 << "".to_u << 0x672a << "".to_u << 0x5305 << "".to_u << 0x542b << " <{0}> ".to_u << 0x7684 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "")]), Array.typed(Object).new(["Incomplete certificate chain in reply", ("".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x6642 << "".to_u << 0x7684 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x9375 << "".to_u << 0x4e0d << "".to_u << 0x5b8c << "".to_u << 0x6574 << "")]), Array.typed(Object).new(["Certificate chain in reply does not verify: ", ("".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x6642 << "".to_u << 0x7684 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x93c8 << "".to_u << 0x672a << "".to_u << 0x9a57 << "".to_u << 0x8b49 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Top-level certificate in reply:\n", ("".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x6642 << "".to_u << 0x7684 << "".to_u << 0x6700 << "".to_u << 0x9ad8 << "".to_u << 0x7d1a << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0xff1a << "\n")]), Array.typed(Object).new(["... is not trusted. ", ("... ".to_u << 0x662f << "".to_u << 0x4e0d << "".to_u << 0x88ab << "".to_u << 0x4fe1 << "".to_u << 0x4efb << "".to_u << 0x7684 << "".to_u << 0x3002 << " ")]), Array.typed(Object).new(["Install reply anyway? [no]:  ", ("".to_u << 0x9084 << "".to_u << 0x662f << "".to_u << 0x8981 << "".to_u << 0x5b89 << "".to_u << 0x88dd << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0xff1f << " [".to_u << 0x5426 << "]".to_u << 0xff1a << "  ")]), Array.typed(Object).new(["NO", ("".to_u << 0x5426 << "")]), Array.typed(Object).new(["Public keys in reply and keystore don't match", ("".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x6642 << "".to_u << 0x7684 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x8207 << " keystore ".to_u << 0x4e0d << "".to_u << 0x7b26 << "")]), Array.typed(Object).new(["Certificate reply and certificate in keystore are identical", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x8207 << " keystore ".to_u << 0x4e2d << "".to_u << 0x7684 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x662f << "".to_u << 0x76f8 << "".to_u << 0x540c << "".to_u << 0x7684 << "")]), Array.typed(Object).new(["Failed to establish chain from reply", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5f9e << "".to_u << 0x56de << "".to_u << 0x8986 << "".to_u << 0x4e2d << "".to_u << 0x5c07 << "".to_u << 0x9375 << "".to_u << 0x5efa << "".to_u << 0x7acb << "".to_u << 0x8d77 << "".to_u << 0x4f86 << "")]), Array.typed(Object).new(["n", "n"]), Array.typed(Object).new(["Wrong answer, try again", ("".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0x7684 << "".to_u << 0x7b54 << "".to_u << 0x6848 << "".to_u << 0xff0c << "".to_u << 0x8acb << "".to_u << 0x518d << "".to_u << 0x8a66 << "".to_u << 0x4e00 << "".to_u << 0x6b21 << "")]), Array.typed(Object).new(["Secret key not generated, alias <alias> already exists", ("".to_u << 0x672a << "".to_u << 0x7522 << "".to_u << 0x751f << "".to_u << 0x79d8 << "".to_u << 0x5bc6 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0xff0c << "".to_u << 0x5225 << "".to_u << 0x540d << " <{0}> ".to_u << 0x5df2 << "".to_u << 0x5b58 << "".to_u << 0x5728 << "")]), Array.typed(Object).new(["Please provide -keysize for secret key generation", ("".to_u << 0x8acb << "".to_u << 0x63d0 << "".to_u << 0x4f9b << " -keysize ".to_u << 0x4ee5 << "".to_u << 0x7522 << "".to_u << 0x751f << "".to_u << 0x79d8 << "".to_u << 0x5bc6 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "")]), Array.typed(Object).new(["keytool usage:\n", ("keytool ".to_u << 0x7528 << "".to_u << 0x6cd5 << "".to_u << 0xff1a << "\n")]), Array.typed(Object).new(["Extensions: ", ("".to_u << 0x5ef6 << "".to_u << 0x4f38 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["-certreq     [-v] [-protected]", "-certreq     [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-sigalg <sigalg>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">] [-sigalg <".to_u << 0x7c3d << "".to_u << 0x7ae0 << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << ">]")]), Array.typed(Object).new(["\t     [-file <csr_file>] [-keypass <keypass>]", ("\t     [-file <".to_u << 0x6191 << "".to_u << 0x8b49 << "".to_u << 0x7c3d << "".to_u << 0x7ae0 << "".to_u << 0x8981 << "".to_u << 0x6c42 << "".to_u << 0x6a94 << "".to_u << 0x6848 << ">] [-keypass <".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["\t     [-keystore <keystore>] [-storepass <storepass>]", ("\t     [-keystore <".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << ">] [-storepass <".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["\t     [-storetype <storetype>] [-providername <name>]", ("\t[-storetype <".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x985e << "".to_u << 0x578b << ">] [-providername <".to_u << 0x540d << "".to_u << 0x7a31 << ">]")]), Array.typed(Object).new(["\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ...", ("\t[-providerclass <".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x7a31 << "> [-providerarg <".to_u << 0x5f15 << "".to_u << 0x6578 << ">]] ...")]), Array.typed(Object).new(["\t     [-providerpath <pathlist>]", ("\t[-providerpath <".to_u << 0x8def << "".to_u << 0x5f91 << "".to_u << 0x6e05 << "".to_u << 0x55ae << ">]")]), Array.typed(Object).new(["-delete      [-v] [-protected] -alias <alias>", ("-delete      [-v] [-protected] -alias <".to_u << 0x5225 << "".to_u << 0x540d << ">")]), Array.typed(Object).new(["-exportcert  [-v] [-rfc] [-protected]", "-exportcert [-v] [-rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-file <cert_file>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">] [-file <".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x6a94 << "".to_u << 0x6848 << ">]")]), Array.typed(Object).new(["-genkeypair  [-v] [-protected]", "-genkeypair [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["\t     [-keyalg <keyalg>] [-keysize <keysize>]", ("\t     [-keyalg <".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << ">] [-keysize <".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5927 << "".to_u << 0x5c0f << ">]")]), Array.typed(Object).new(["\t     [-sigalg <sigalg>] [-dname <dname>]", ("\t     [-sigalg <".to_u << 0x7c3d << "".to_u << 0x7ae0 << "".to_u << 0x6f14 << "".to_u << 0x7b97 << "".to_u << 0x6cd5 << ">] [-dname <".to_u << 0x7db2 << "".to_u << 0x57df << "".to_u << 0x540d << "".to_u << 0x7a31 << ">]")]), Array.typed(Object).new(["\t     [-validity <valDays>] [-keypass <keypass>]", ("\t     [-validity <".to_u << 0x6709 << "".to_u << 0x6548 << "".to_u << 0x5929 << "".to_u << 0x6578 << ">] [-keypass <".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["-genseckey   [-v] [-protected]", "-genseckey [-v] [-protected]"]), Array.typed(Object).new(["-help", "-help"]), Array.typed(Object).new(["-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]", "-importcert [-v] [-noprompt] [-trustcacerts] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["\t     [-alias <alias>] [-keypass <keypass>]", ("\t[-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">] [-keypass <".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["\t     [-file <cert_file>] [-keypass <keypass>]", ("\t     [-file <".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x6a94 << "".to_u << 0x6848 << ">] [-keypass <".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["-importkeystore [-v] ", "-importkeystore [-v]"]), Array.typed(Object).new(["\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]", ("\t[-srckeystore <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << ">] [-destkeystore <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << ">]")]), Array.typed(Object).new(["\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]", ("\t[-srcstoretype <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x985e << "".to_u << 0x578b << ">] [-deststoretype <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x985e << "".to_u << 0x578b << ">]")]), Array.typed(Object).new(["\t     [-srcprotected] [-destprotected]", "\t[-srcprotected] [-destprotected]"]), Array.typed(Object).new(["\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]", ("\t[-srcstorepass <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">] [-deststorepass <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]", ("\t[-srcprovidername <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0x540d << "".to_u << 0x7a31 << ">]\n\t[-destprovidername <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0x540d << "".to_u << 0x7a31 << ">]")]), Array.typed(Object).new(["\t     [-srcalias <srcalias> [-destalias <destalias>]", ("\t[-srcalias <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x5225 << "".to_u << 0x540d << "> [-destalias <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]", ("\t[-srckeypass <".to_u << 0x4f86 << "".to_u << 0x6e90 << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">] [-destkeypass <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]]")]), Array.typed(Object).new(["\t     [-noprompt]", "\t[-noprompt]"]), Array.typed(Object).new(["-changealias [-v] [-protected] -alias <alias> -destalias <destalias>", ("-changealias [-v] [-protected] -alias <".to_u << 0x5225 << "".to_u << 0x540d << "> -destalias <".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x5225 << "".to_u << 0x540d << ">")]), Array.typed(Object).new(["\t     [-keypass <keypass>]", ("\t     [-keypass <".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["-keypasswd   [-v] [-alias <alias>]", ("-keypasswd   [-v] [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["\t     [-keypass <old_keypass>] [-new <new_keypass>]", ("\t     [-keypass <".to_u << 0x820a << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">] [-new <".to_u << 0x65b0 << "".to_u << 0x4e3b << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["-list        [-v | -rfc] [-protected]", "-list        [-v | -rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["-printcert   [-v] [-file <cert_file>]", ("-printcert   [-v] [-file <".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x6a94 << "".to_u << 0x6848 << ">]")]), Array.typed(Object).new(["\t     [-alias <alias>]", ("\t     [-alias <".to_u << 0x5225 << "".to_u << 0x540d << ">]")]), Array.typed(Object).new(["-storepasswd [-v] [-new <new_storepass>]", ("-storepasswd [-v] [-new <".to_u << 0x65b0 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << ">]")]), Array.typed(Object).new(["Warning: A public key for alias 'signers[i]' does not exist.  Make sure a KeyStore is properly configured.", ("".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0xfe30 << "".to_u << 0x5225 << "".to_u << 0x540d << " {0} ".to_u << 0x7684 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x4e0d << "".to_u << 0x5b58 << "".to_u << 0x5728 << "".to_u << 0x3002 << "".to_u << 0x8acb << "".to_u << 0x78ba << "".to_u << 0x5b9a << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x914d << "".to_u << 0x7f6e << "".to_u << 0x6b63 << "".to_u << 0x78ba << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Warning: Class not found: class", ("".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0xfe30 << "".to_u << 0x627e << "".to_u << 0x4e0d << "".to_u << 0x5230 << "".to_u << 0x985e << "".to_u << 0x5225 << " {0}")]), Array.typed(Object).new(["Warning: Invalid argument(s) for constructor: arg", ("".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0xfe30 << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x5efa << "".to_u << 0x69cb << "".to_u << 0x5b50 << "".to_u << 0x5f15 << "".to_u << 0x6578 << "".to_u << 0xff1a << "{0}")]), Array.typed(Object).new(["Illegal Principal Type: type", ("".to_u << 0x975e << "".to_u << 0x6cd5 << "".to_u << 0x7684 << "".to_u << 0x4e3b << "".to_u << 0x9ad4 << "".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xfe30 << "{0}")]), Array.typed(Object).new(["Illegal option: option", ("".to_u << 0x975e << "".to_u << 0x6cd5 << "".to_u << 0x7684 << "".to_u << 0x9078 << "".to_u << 0x9805 << "".to_u << 0xff1a << "{0}")]), Array.typed(Object).new(["Usage: policytool [options]", ("".to_u << 0x7528 << "".to_u << 0x6cd5 << "".to_u << 0xff1a << " policytool [".to_u << 0x9078 << "".to_u << 0x9805 << "]")]), Array.typed(Object).new(["  [-file <file>]    policy file location", ("  [-file <file>]    ".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0x4f4d << "".to_u << 0x7f6e << "")]), Array.typed(Object).new(["New", ("".to_u << 0x65b0 << "".to_u << 0x589e << "")]), Array.typed(Object).new(["Open", ("".to_u << 0x958b << "".to_u << 0x555f << "")]), Array.typed(Object).new(["Save", ("".to_u << 0x5132 << "".to_u << 0x5b58 << "")]), Array.typed(Object).new(["Save As", ("".to_u << 0x53e6 << "".to_u << 0x5b58 << "".to_u << 0x65b0 << "".to_u << 0x6a94 << "")]), Array.typed(Object).new(["View Warning Log", ("".to_u << 0x6aa2 << "".to_u << 0x8996 << "".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0x8a18 << "".to_u << 0x9304 << "")]), Array.typed(Object).new(["Exit", ("".to_u << 0x96e2 << "".to_u << 0x958b << "")]), Array.typed(Object).new(["Add Policy Entry", ("".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["Edit Policy Entry", ("".to_u << 0x7de8 << "".to_u << 0x8f2f << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["Remove Policy Entry", ("".to_u << 0x79fb << "".to_u << 0x9664 << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["Edit", ("".to_u << 0x7de8 << "".to_u << 0x8f2f << "")]), Array.typed(Object).new(["Retain", ("".to_u << 0x4fdd << "".to_u << 0x7559 << "")]), Array.typed(Object).new(["Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name.", "Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name."]), Array.typed(Object).new(["Add Public Key Alias", ("".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["Remove Public Key Alias", ("".to_u << 0x79fb << "".to_u << 0x9664 << "".to_u << 0x516c << "".to_u << 0x958b << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["File", ("".to_u << 0x6a94 << "".to_u << 0x6848 << "")]), Array.typed(Object).new(["KeyStore", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "")]), Array.typed(Object).new(["Policy File:", ("".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Could not open policy file: policyFile: e.toString()", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x958b << "".to_u << 0x555f << "".to_u << 0x7b56 << "".to_u << 0x7565 << "".to_u << 0x6a94 << "".to_u << 0x6848 << "".to_u << 0xff1a << "{0}".to_u << 0xff1a << "{1}")]), Array.typed(Object).new(["Policy Tool", ("".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x5de5 << "".to_u << 0x5177 << "")]), Array.typed(Object).new(["Errors have occurred while opening the policy configuration.  View the Warning Log for more information.", ("".to_u << 0x958b << "".to_u << 0x555f << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x8a18 << "".to_u << 0x7f6e << "".to_u << 0x6642 << "".to_u << 0x767c << "".to_u << 0x751f << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0x3002 << " ".to_u << 0x8acb << "".to_u << 0x6aa2 << "".to_u << 0x8996 << "".to_u << 0x8b66 << "".to_u << 0x544a << "".to_u << 0x8a18 << "".to_u << 0x9304 << "".to_u << 0x4ee5 << "".to_u << 0x53d6 << "".to_u << 0x5f97 << "".to_u << 0x66f4 << "".to_u << 0x591a << "".to_u << 0x7684 << "".to_u << 0x8cc7 << "".to_u << 0x8a0a << "")]), Array.typed(Object).new(["Error", ("".to_u << 0x932f << "".to_u << 0x8aa4 << "")]), Array.typed(Object).new(["OK", ("".to_u << 0x78ba << "".to_u << 0x8a8d << "")]), Array.typed(Object).new(["Status", ("".to_u << 0x72c0 << "".to_u << 0x614b << "")]), Array.typed(Object).new(["Warning", ("".to_u << 0x8b66 << "".to_u << 0x544a << "")]), Array.typed(Object).new(["Permission:                                                       ", ("".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0xff1a << "                                                       ")]), Array.typed(Object).new(["Principal Type:", ("Principal ".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Principal Name:", ("Principal ".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Target Name:                                                    ", ("".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff1a << "                                                    ")]), Array.typed(Object).new(["Actions:                                                             ", ("".to_u << 0x52d5 << "".to_u << 0x4f5c << "".to_u << 0xff1a << "                                                             ")]), Array.typed(Object).new(["OK to overwrite existing file filename?", ("".to_u << 0x78ba << "".to_u << 0x8a8d << "".to_u << 0x8986 << "".to_u << 0x5beb << "".to_u << 0x73fe << "".to_u << 0x5b58 << "".to_u << 0x7684 << "".to_u << 0x6a94 << "".to_u << 0x6848 << " {0}".to_u << 0xff1f << "")]), Array.typed(Object).new(["Cancel", ("".to_u << 0x53d6 << "".to_u << 0x6d88 << "")]), Array.typed(Object).new(["CodeBase:", "CodeBase:"]), Array.typed(Object).new(["SignedBy:", "SignedBy:"]), Array.typed(Object).new(["Add Principal", ("".to_u << 0x65b0 << "".to_u << 0x589e << " Principal")]), Array.typed(Object).new(["Edit Principal", ("".to_u << 0x7de8 << "".to_u << 0x8f2f << " Principal")]), Array.typed(Object).new(["Remove Principal", ("".to_u << 0x79fb << "".to_u << 0x9664 << " Principal")]), Array.typed(Object).new(["Principals:", ("Principals".to_u << 0xff1a << "")]), Array.typed(Object).new(["  Add Permission", ("  ".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["  Edit Permission", ("  ".to_u << 0x7de8 << "".to_u << 0x8f2f << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["Remove Permission", ("".to_u << 0x79fb << "".to_u << 0x9664 << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["Done", ("".to_u << 0x5b8c << "".to_u << 0x6210 << "")]), Array.typed(Object).new(["KeyStore URL:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << " URL".to_u << 0xff1a << "")]), Array.typed(Object).new(["KeyStore Type:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x985e << "".to_u << 0x578b << "".to_u << 0xfe30 << "")]), Array.typed(Object).new(["KeyStore Provider:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0xfe30 << "")]), Array.typed(Object).new(["KeyStore Password URL:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << " URL".to_u << 0xff1a << "")]), Array.typed(Object).new(["Principals", "Principals"]), Array.typed(Object).new(["  Edit Principal:", ("  ".to_u << 0x7de8 << "".to_u << 0x8f2f << " Principal".to_u << 0xff1a << "")]), Array.typed(Object).new(["  Add New Principal:", ("  ".to_u << 0x52a0 << "".to_u << 0x5165 << "".to_u << 0x65b0 << " Principal".to_u << 0xff1a << "")]), Array.typed(Object).new(["Permissions", ("".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["  Edit Permission:", ("  ".to_u << 0x7de8 << "".to_u << 0x8f2f << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["  Add New Permission:", ("  ".to_u << 0x52a0 << "".to_u << 0x5165 << "".to_u << 0x65b0 << "".to_u << 0x7684 << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["Signed By:", ("".to_u << 0x7c3d << "".to_u << 0x7f72 << "".to_u << 0x4eba << "".to_u << 0xff1a << "")]), Array.typed(Object).new(["Cannot Specify Principal with a Wildcard Class without a Wildcard Name", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff0c << "".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x542b << "".to_u << 0x6709 << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << "".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x7684 << " Principal")]), Array.typed(Object).new(["Cannot Specify Principal without a Name", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff0c << "".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x6307 << "".to_u << 0x5b9a << " Principal")]), Array.typed(Object).new(["Permission and Target Name must have a value", ("".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "".to_u << 0x53ca << "".to_u << 0x76ee << "".to_u << 0x6a19 << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x6709 << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x503c << "".to_u << 0x3002 << "")]), Array.typed(Object).new(["Remove this Policy Entry?", ("".to_u << 0x79fb << "".to_u << 0x9664 << "".to_u << 0x9019 << "".to_u << 0x500b << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["Overwrite File", ("".to_u << 0x8986 << "".to_u << 0x5beb << "".to_u << 0x6a94 << "".to_u << 0x6848 << "")]), Array.typed(Object).new(["Policy successfully written to filename", ("".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x6210 << "".to_u << 0x529f << "".to_u << 0x5beb << "".to_u << 0x81f3 << " {0}")]), Array.typed(Object).new(["null filename", ("".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x6a94 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["Save changes?", ("".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x8b8a << "".to_u << 0x66f4 << "".to_u << 0xff1f << "")]), Array.typed(Object).new(["Yes", ("".to_u << 0x662f << "")]), Array.typed(Object).new(["No", ("".to_u << 0x5426 << "")]), Array.typed(Object).new(["Policy Entry", ("".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["Save Changes", ("".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x8b8a << "".to_u << 0x66f4 << "")]), Array.typed(Object).new(["No Policy Entry selected", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x9078 << "".to_u << 0x53d6 << "".to_u << 0x898f << "".to_u << 0x5247 << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["Unable to open KeyStore: ex.toString()", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x958b << "".to_u << 0x555f << "".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0xff1a << "{0}")]), Array.typed(Object).new(["No principal selected", ("".to_u << 0x672a << "".to_u << 0x9078 << "".to_u << 0x53d6 << " Principal")]), Array.typed(Object).new(["No permission selected", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x9078 << "".to_u << 0x53d6 << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "")]), Array.typed(Object).new(["name", ("".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["configuration type", ("".to_u << 0x914d << "".to_u << 0x7f6e << "".to_u << 0x985e << "".to_u << 0x578b << "")]), Array.typed(Object).new(["environment variable name", ("".to_u << 0x74b0 << "".to_u << 0x5883 << "".to_u << 0x8b8a << "".to_u << 0x6578 << "".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["library name", ("".to_u << 0x7a0b << "".to_u << 0x5f0f << "".to_u << 0x5eab << "".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["package name", ("".to_u << 0x5957 << "".to_u << 0x88dd << "".to_u << 0x8edf << "".to_u << 0x9ad4 << "".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["policy type", ("".to_u << 0x7b56 << "".to_u << 0x7565 << "".to_u << 0x985e << "".to_u << 0x578b << "")]), Array.typed(Object).new(["property name", ("".to_u << 0x5c6c << "".to_u << 0x6027 << "".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["provider name", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["Principal List", ("".to_u << 0x4e3b << "".to_u << 0x9ad4 << "".to_u << 0x6e05 << "".to_u << 0x55ae << "")]), Array.typed(Object).new(["Permission List", ("".to_u << 0x6b0a << "".to_u << 0x9650 << "".to_u << 0x6e05 << "".to_u << 0x55ae << "")]), Array.typed(Object).new(["Code Base", ("".to_u << 0x4ee3 << "".to_u << 0x78bc << "".to_u << 0x57fa << "".to_u << 0x6e96 << "")]), Array.typed(Object).new(["KeyStore U R L:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << " U R L".to_u << 0xff1a << "")]), Array.typed(Object).new(["KeyStore Password U R L:", ("".to_u << 0x91d1 << "".to_u << 0x9470 << "".to_u << 0x5132 << "".to_u << 0x5b58 << "".to_u << 0x5eab << "".to_u << 0x5bc6 << "".to_u << 0x78bc << " U R L".to_u << 0xff1a << "")]), Array.typed(Object).new(["invalid null input(s)", ("".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7a7a << "".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["actions can only be 'read'", ("".to_u << 0x52d5 << "".to_u << 0x4f5c << "".to_u << 0x53ea << "".to_u << 0x80fd << "".to_u << 0x88ab << "".to_u << 0x8b80 << "".to_u << 0x53d6 << "'")]), Array.typed(Object).new(["permission name [name] syntax invalid: ", ("".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "".to_u << 0x540d << "".to_u << 0x7a31 << " [{0}] ".to_u << 0x662f << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x8a9e << "".to_u << 0x6cd5 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["Credential Class not followed by a Principal Class and Name", ("".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x7b49 << "".to_u << 0x7d1a << "".to_u << 0x672a << "".to_u << 0x63a5 << "".to_u << 0x5728 << " Principal ".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x53ca << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x4e4b << "".to_u << 0x5f8c << "")]), Array.typed(Object).new(["Principal Class not followed by a Principal Name", ("Principal ".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x672a << "".to_u << 0x63a5 << "".to_u << 0x5728 << " Principal ".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x4e4b << "".to_u << 0x5f8c << "")]), Array.typed(Object).new(["Principal Name must be surrounded by quotes", ("Principal ".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x5fc5 << "".to_u << 0x9808 << "".to_u << 0x4ee5 << "".to_u << 0x5f15 << "".to_u << 0x865f << "".to_u << 0x5708 << "".to_u << 0x4f4f << "")]), Array.typed(Object).new(["Principal Name missing end quote", ("Principal ".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x7f3a << "".to_u << 0x5c11 << "".to_u << 0x4e0b << "".to_u << 0x5f15 << "".to_u << 0x865f << "")]), Array.typed(Object).new(["PrivateCredentialPermission Principal Class can not be a wildcard (*) value if Principal Name is not a wildcard (*) value", ("".to_u << 0x5982 << "".to_u << 0x679c << " Principal ".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0x4e0d << "".to_u << 0x662f << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << " (*) ".to_u << 0x503c << "".to_u << 0xff0c << "".to_u << 0x90a3 << "".to_u << 0x9ebc << " PrivateCredentialPermission Principal ".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x5c31 << "".to_u << 0x4e0d << "".to_u << 0x6703 << "".to_u << 0x662f << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << " (*) ".to_u << 0x503c << "")]), Array.typed(Object).new(["CredOwner:\n\tPrincipal Class = class\n\tPrincipal Name = name", ("CredOwner:\n\tPrincipal ".to_u << 0x985e << "".to_u << 0x5225 << " = {0}\n\tPrincipal ".to_u << 0x540d << "".to_u << 0x7a31 << " = {1}")]), Array.typed(Object).new(["provided null name", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7a7a << "".to_u << 0x540d << "")]), Array.typed(Object).new(["provided null keyword map", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7a7a << "".to_u << 0x7684 << "".to_u << 0x95dc << "".to_u << 0x9375 << "".to_u << 0x5b57 << "".to_u << 0x5c0d << "".to_u << 0x6620 << "")]), Array.typed(Object).new(["provided null OID map", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7a7a << "".to_u << 0x7684 << " OID ".to_u << 0x5c0d << "".to_u << 0x6620 << "")]), Array.typed(Object).new(["invalid null AccessControlContext provided", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x7a7a << " AccessControlContext")]), Array.typed(Object).new(["invalid null action provided", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x7a7a << "".to_u << 0x52d5 << "".to_u << 0x4f5c << "")]), Array.typed(Object).new(["invalid null Class provided", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7684 << "".to_u << 0x7a7a << "".to_u << 0x985e << "".to_u << 0x5225 << "")]), Array.typed(Object).new(["Subject:\n", ("".to_u << 0x4e3b << "".to_u << 0x984c << "".to_u << 0xff1a << "\n")]), Array.typed(Object).new(["\tPrincipal: ", "\tPrincipal: "]), Array.typed(Object).new(["\tPublic Credential: ", ("\t".to_u << 0x516c << "".to_u << 0x7528 << "".to_u << 0x8a8d << "".to_u << 0x8b49 << " ")]), Array.typed(Object).new(["\tPrivate Credentials inaccessible\n", ("\t".to_u << 0x79c1 << "".to_u << 0x4eba << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x9032 << "".to_u << 0x5165 << "\n")]), Array.typed(Object).new(["\tPrivate Credential: ", ("\t".to_u << 0x79c1 << "".to_u << 0x4eba << "".to_u << 0x6388 << "".to_u << 0x6b0a << " ")]), Array.typed(Object).new(["\tPrivate Credential inaccessible\n", ("\t".to_u << 0x79c1 << "".to_u << 0x4eba << "".to_u << 0x8a8d << "".to_u << 0x8b49 << "".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x9032 << "".to_u << 0x5165 << "\n")]), Array.typed(Object).new(["Subject is read-only", ("".to_u << 0x4e3b << "".to_u << 0x984c << "".to_u << 0x70ba << "".to_u << 0x552f << "".to_u << 0x8b80 << "")]), Array.typed(Object).new(["attempting to add an object which is not an instance of java.security.Principal to a Subject's Principal Set", ("".to_u << 0x8a66 << "".to_u << 0x5716 << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x975e << " java.security.Principal ".to_u << 0x6848 << "".to_u << 0x4f8b << "".to_u << 0x7684 << "".to_u << 0x7269 << "".to_u << 0x4ef6 << "".to_u << 0x81f3 << "".to_u << 0x4e3b << "".to_u << 0x984c << "".to_u << 0x7684 << " Principal ".to_u << 0x7fa4 << "".to_u << 0x4e2d << "")]), Array.typed(Object).new(["attempting to add an object which is not an instance of class", ("".to_u << 0x8a66 << "".to_u << 0x5716 << "".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x975e << " {0} ".to_u << 0x6848 << "".to_u << 0x4f8b << "".to_u << 0x7684 << "".to_u << 0x7269 << "".to_u << 0x4ef6 << "")]), Array.typed(Object).new(["LoginModuleControlFlag: ", "LoginModuleControlFlag: "]), Array.typed(Object).new(["Invalid null input: name", ("".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7a7a << "".to_u << 0x8f38 << "".to_u << 0x5165 << "".to_u << 0xff1a << " ".to_u << 0x540d << "".to_u << 0x7a31 << "")]), Array.typed(Object).new(["No LoginModules configured for name", ("".to_u << 0x7121 << "".to_u << 0x91dd << "".to_u << 0x5c0d << " {0} ".to_u << 0x914d << "".to_u << 0x7f6e << "".to_u << 0x7684 << " LoginModules")]), Array.typed(Object).new(["invalid null Subject provided", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7a7a << "".to_u << 0x4e3b << "".to_u << 0x984c << "")]), Array.typed(Object).new(["invalid null CallbackHandler provided", ("".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x7121 << "".to_u << 0x6548 << "".to_u << 0x7a7a << " CallbackHandler")]), Array.typed(Object).new(["null subject - logout called before login", ("".to_u << 0x7a7a << "".to_u << 0x4e3b << "".to_u << 0x984c << " - ".to_u << 0x5728 << "".to_u << 0x767b << "".to_u << 0x5165 << "".to_u << 0x4e4b << "".to_u << 0x524d << "".to_u << 0x5373 << "".to_u << 0x547c << "".to_u << 0x53eb << "".to_u << 0x767b << "".to_u << 0x51fa << "")]), Array.typed(Object).new(["unable to instantiate LoginModule, module, because it does not provide a no-argument constructor", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5be6 << "".to_u << 0x5217 << "".to_u << 0x5316 << " LoginModule".to_u << 0xff0c << "{0}".to_u << 0xff0c << "".to_u << 0x56e0 << "".to_u << 0x70ba << "".to_u << 0x5b83 << "".to_u << 0x4e26 << "".to_u << 0x672a << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x4e00 << "".to_u << 0x500b << "".to_u << 0x975e << "".to_u << 0x5f15 << "".to_u << 0x6578 << "".to_u << 0x7684 << "".to_u << 0x69cb << "".to_u << 0x9020 << "".to_u << 0x51fd << "".to_u << 0x6578 << "")]), Array.typed(Object).new(["unable to instantiate LoginModule", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5be6 << "".to_u << 0x4f8b << "".to_u << 0x5316 << " LoginModule")]), Array.typed(Object).new(["unable to instantiate LoginModule: ", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5275 << "".to_u << 0x8a2d << " LoginModule".to_u << 0xff1a << "")]), Array.typed(Object).new(["unable to find LoginModule class: ", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x627e << "".to_u << 0x5230 << " LoginModule ".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["unable to access LoginModule: ", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5b58 << "".to_u << 0x53d6 << " LoginModule: ")]), Array.typed(Object).new(["Login Failure: all modules ignored", ("".to_u << 0x767b << "".to_u << 0x5165 << "".to_u << 0x5931 << "".to_u << 0x6557 << "".to_u << 0xff1a << " ".to_u << 0x5ffd << "".to_u << 0x7565 << "".to_u << 0x6240 << "".to_u << 0x6709 << "".to_u << 0x6a21 << "".to_u << 0x7d44 << "")]), Array.typed(Object).new(["java.security.policy: error parsing policy:\n\tmessage", ("java.security.policy: ".to_u << 0x89e3 << "".to_u << 0x6790 << "".to_u << 0x932f << "".to_u << 0x8aa4 << " {0}".to_u << 0xff1a << "\n\t{1}")]), Array.typed(Object).new(["java.security.policy: error adding Permission, perm:\n\tmessage", ("java.security.policy: ".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "".to_u << 0x932f << "".to_u << 0x8aa4 << " {0}".to_u << 0xff1a << "\n\t{1}")]), Array.typed(Object).new(["java.security.policy: error adding Entry:\n\tmessage", ("java.security.policy: ".to_u << 0x65b0 << "".to_u << 0x589e << "".to_u << 0x9805 << "".to_u << 0x76ee << "".to_u << 0x932f << "".to_u << 0x8aa4 << "".to_u << 0xff1a << "\n\t{0}")]), Array.typed(Object).new(["alias name not provided (pe.name)", ("".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x540d << "".to_u << 0x7a31 << " ({0}) ".to_u << 0x672a << "".to_u << 0x63d0 << "".to_u << 0x4f9b << "")]), Array.typed(Object).new(["unable to perform substitution on alias, suffix", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5c0d << "".to_u << 0x5225 << "".to_u << 0x540d << "".to_u << 0x57f7 << "".to_u << 0x884c << "".to_u << 0x66ff << "".to_u << 0x63db << "".to_u << 0xff0c << "{0}")]), Array.typed(Object).new(["substitution value, prefix, unsupported", ("".to_u << 0x4e0d << "".to_u << 0x652f << "".to_u << 0x63f4 << "".to_u << 0x7684 << "".to_u << 0x66ff << "".to_u << 0x63db << "".to_u << 0x503c << "".to_u << 0xff0c << "{0}")]), Array.typed(Object).new(["(", "("]), Array.typed(Object).new([")", ")"]), Array.typed(Object).new(["type can't be null", ("".to_u << 0x4e0d << "".to_u << 0x80fd << "".to_u << 0x70ba << "".to_u << 0x7a7a << "".to_u << 0x8f38 << "".to_u << 0x5165 << "")]), Array.typed(Object).new(["keystorePasswordURL can not be specified without also specifying keystore", ("".to_u << 0x6307 << "".to_u << 0x5b9a << " keystorePasswordURL ".to_u << 0x9700 << "".to_u << 0x8981 << "".to_u << 0x540c << "".to_u << 0x6642 << "".to_u << 0x6307 << "".to_u << 0x5b9a << " keystore")]), Array.typed(Object).new(["expected keystore type", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " keystore ".to_u << 0x985e << "".to_u << 0x578b << "")]), Array.typed(Object).new(["expected keystore provider", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " keystore ".to_u << 0x63d0 << "".to_u << 0x4f9b << "".to_u << 0x8005 << "")]), Array.typed(Object).new(["multiple Codebase expressions", ("".to_u << 0x591a << "".to_u << 0x52d5 << " Codebase ".to_u << 0x8868 << "".to_u << 0x793a << "".to_u << 0x5f0f << "")]), Array.typed(Object).new(["multiple SignedBy expressions", ("".to_u << 0x591a << "".to_u << 0x91cd << " SignedBy ".to_u << 0x8868 << "".to_u << 0x793a << "".to_u << 0x5f0f << "")]), Array.typed(Object).new(["SignedBy has empty alias", ("SignedBy ".to_u << 0x6709 << "".to_u << 0x7a7a << "".to_u << 0x5225 << "".to_u << 0x540d << "")]), Array.typed(Object).new(["can not specify Principal with a wildcard class without a wildcard name", ("".to_u << 0x6c92 << "".to_u << 0x6709 << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << "".to_u << 0x540d << "".to_u << 0x7a31 << "".to_u << 0xff0c << "".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x6307 << "".to_u << 0x5b9a << "".to_u << 0x542b << "".to_u << 0x6709 << "".to_u << 0x901a << "".to_u << 0x914d << "".to_u << 0x7b26 << "".to_u << 0x865f << "".to_u << 0x985e << "".to_u << 0x5225 << "".to_u << 0x7684 << " Principal")]), Array.typed(Object).new(["expected codeBase or SignedBy or Principal", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " codeBase ".to_u << 0x6216 << " SignedBy ".to_u << 0x6216 << " Principal")]), Array.typed(Object).new(["expected permission entry", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << "".to_u << 0x8a31 << "".to_u << 0x53ef << "".to_u << 0x6b0a << "".to_u << 0x9805 << "".to_u << 0x76ee << "")]), Array.typed(Object).new(["number ", ("".to_u << 0x865f << "".to_u << 0x78bc << " ")]), Array.typed(Object).new(["expected [expect], read [end of file]", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " [{0}], ".to_u << 0x8b80 << "".to_u << 0x53d6 << " [end of file]")]), Array.typed(Object).new(["expected [;], read [end of file]", ("".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " [;], ".to_u << 0x8b80 << "".to_u << 0x53d6 << " [end of file]")]), Array.typed(Object).new(["line number: msg", ("".to_u << 0x884c << " {0}".to_u << 0xff1a << " {1}")]), Array.typed(Object).new(["line number: expected [expect], found [actual]", ("".to_u << 0x884c << " {0}".to_u << 0xff1a << " ".to_u << 0x9810 << "".to_u << 0x671f << "".to_u << 0x7684 << " [{1}]".to_u << 0xff0c << "".to_u << 0x767c << "".to_u << 0x73fe << " [{2}]")]), Array.typed(Object).new(["null principalClass or principalName", ("".to_u << 0x7a7a << " principalClass ".to_u << 0x6216 << " principalName")]), Array.typed(Object).new(["PKCS11 Token [providerName] Password: ", ("PKCS11 ".to_u << 0x8a18 << "".to_u << 0x865f << " [{0}] ".to_u << 0x5bc6 << "".to_u << 0x78bc << "".to_u << 0xff1a << " ")]), Array.typed(Object).new(["unable to instantiate Subject-based policy", ("".to_u << 0x7121 << "".to_u << 0x6cd5 << "".to_u << 0x5275 << "".to_u << 0x8a2d << "".to_u << 0x57fa << "".to_u << 0x65bc << "".to_u << 0x4e3b << "".to_u << 0x9ad4 << "".to_u << 0x7684 << "".to_u << 0x7b56 << "".to_u << 0x7565 << "")])]) }
      const_attr_reader  :Contents
    }
    
    typesig { [] }
    # Returns the contents of this <code>ResourceBundle</code>.
    # 
    # <p>
    # 
    # @return the contents of this <code>ResourceBundle</code>.
    def get_contents
      return Contents
    end
    
    typesig { [] }
    def initialize
      super()
    end
    
    private
    alias_method :initialize__resources_zh_tw, :initialize
  end
  
end
