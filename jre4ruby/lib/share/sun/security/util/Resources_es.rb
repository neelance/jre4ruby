require "rjava"

# Copyright 2001-2006 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
# 
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
# 
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
module Sun::Security::Util
  module Resources_esImports
    class_module.module_eval {
      include ::Java::Lang
      include ::Sun::Security::Util
    }
  end
  
  # <p> This class represents the <code>ResourceBundle</code>
  # for javax.security.auth and sun.security.
  class Resources_es < Java::Util::ListResourceBundle
    include_class_members Resources_esImports
    
    class_module.module_eval {
      # shared (from jarsigner)
      # shared (from keytool)
      # keytool
      # Translators of the following 5 pairs, ATTENTION:
      # the next 5 string pairs are meant to be combined into 2 paragraphs,
      # 1+3+4 and 2+3+5. make sure your translation also does.
      # rest is same as -certreq starting from -keystore *
      # {"-export      [-v] [-rfc] [-protected]",
      # "-export      [-v] [-rfc] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # {"-genkey      [-v] [-protected]",
      # "-genkey      [-v] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-identitydb  [-v] [-protected]",
      # "-identitydb  [-v] [-protected]"},
      # {"\t     [-file <idb_file>]", "\t     [-file <idb_file>]"},
      # rest is same as -certreq starting from -keystore *
      # {"-import      [-v] [-noprompt] [-trustcacerts] [-protected]",
      # "-import      [-v] [-noprompt] [-trustcacerts] [-protected]"},
      # rest is same as -certreq starting from -keystore *
      # l\u00ednea demasiado larga, dividir en 2
      # rest is same as -certreq starting from -keystore *
      # {"-keyclone    [-v] [-protected]",
      # "-keyclone    [-v] [-protected]"},
      # {"\t     [-alias <alias>] -dest <dest_alias>",
      # "\t     [-alias <alias>] -dest <dest_alias>"},
      # {"\t     [-keypass <keypass>] [-new <new_keypass>]",
      # "\t     [-keypass <keypass>] [-new <new_keypass>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # {"-selfcert    [-v] [-protected]",
      # "-selfcert    [-v] [-protected]"},
      # {"\t     [-dname <dname>] [-validity <valDays>]",
      # "\t     [-dname <dname>] [-validity <valDays>]"},
      # {"\t     [-keypass <keypass>] [-sigalg <sigalg>]",
      # "\t     [-keypass <keypass>] [-sigalg <sigalg>]"},
      # rest is same as -certreq starting from -keystore *
      # rest is same as -certreq starting from -keystore *
      # policytool
      # javax.security.auth.PrivateCredentialPermission
      # javax.security.auth.x500
      # javax.security.auth.Subject
      # javax.security.auth.login.AppConfigurationEntry
      # javax.security.auth.login.LoginContext
      # sun.security.provider.PolicyFile
      # sun.security.provider.PolicyParser
      # sun.security.pkcs11.SunPKCS11
      # --- DEPRECATED ---
      # javax.security.auth.Policy
      const_set_lazy(:Contents) { Array.typed(Array.typed(Object)).new([Array.typed(Object).new([" ", " "]), Array.typed(Object).new(["  ", "  "]), Array.typed(Object).new(["      ", "      "]), Array.typed(Object).new([", ", ", "]), Array.typed(Object).new(["\n", "\n"]), Array.typed(Object).new(["*******************************************", "*******************************************"]), Array.typed(Object).new(["*******************************************\n\n", "*******************************************\n\n"]), Array.typed(Object).new(["keytool error: ", "error de keytool: "]), Array.typed(Object).new(["Illegal option:  ", ("Opci".to_u << 0x00f3 << "n no permitida:  ")]), Array.typed(Object).new(["Try keytool -help", "Probar keytool -help"]), Array.typed(Object).new(["Command option <flag> needs an argument.", ("La opci".to_u << 0x00f3 << "n de comando {0} necesita un argumento.")]), Array.typed(Object).new(["Warning:  Different store and key passwords not supported for PKCS12 KeyStores. Ignoring user-specified <command> value.", ("Advertencia: Los archivos de almac".to_u << 0x00e9 << "n de claves en formato PKCS12 no admiten contrase".to_u << 0x00f1 << "as de clave y almacenamiento distintas. Se omite el valor especificado por el usuario {0}.")]), Array.typed(Object).new(["-keystore must be NONE if -storetype is {0}", "-keystore debe ser NONE si -storetype es {0}"]), Array.typed(Object).new(["Too may retries, program terminated", "Ha habido demasiados intentos, se ha cerrado el programa"]), Array.typed(Object).new(["-storepasswd and -keypasswd commands not supported if -storetype is {0}", "los comandos -storepasswd y -keypasswd no se admiten si -storetype es {0}"]), Array.typed(Object).new(["-keypasswd commands not supported if -storetype is PKCS12", "los comandos -keypasswd no se admiten si -storetype es PKCS12"]), Array.typed(Object).new(["-keypass and -new can not be specified if -storetype is {0}", "-keypass y -new no se pueden especificar si -storetype es {0}"]), Array.typed(Object).new(["if -protected is specified, then -storepass, -keypass, and -new must not be specified", "si se especifica -protected, no deben especificarse -storepass, -keypass ni -new"]), Array.typed(Object).new(["if -srcprotected is specified, then -srcstorepass and -srckeypass must not be specified", "si se especifica -srcprotected, no se puede especificar -srcstorepass ni -srckeypass"]), Array.typed(Object).new(["if keystore is not password protected, then -storepass, -keypass, and -new must not be specified", ("Si keystore no est".to_u << 0x00e1 << " protegido por contrase".to_u << 0x00f1 << "a, no se deben especificar -storepass, -keypass ni -new")]), Array.typed(Object).new(["if source keystore is not password protected, then -srcstorepass and -srckeypass must not be specified", ("Si keystore de origen no est".to_u << 0x00e1 << " protegido por contrase".to_u << 0x00f1 << "a, no se deben especificar -srcstorepass ni -srckeypass")]), Array.typed(Object).new(["Validity must be greater than zero", "La validez debe ser mayor que cero"]), Array.typed(Object).new(["provName not a provider", "{0} no es un proveedor"]), Array.typed(Object).new(["Usage error: no command provided", ("Error de uso: no se ha proporcionado ning".to_u << 0x00fa << "n comando")]), Array.typed(Object).new(["Usage error, <arg> is not a legal command", "Error de uso, {0} no es un comando legal"]), Array.typed(Object).new(["Source keystore file exists, but is empty: ", ("El archivo de almac".to_u << 0x00e9 << "n de claves de origen existe, pero est".to_u << 0x00e1 << " vac".to_u << 0x00ed << "o: ")]), Array.typed(Object).new(["Please specify -srckeystore", "Especifique -srckeystore"]), Array.typed(Object).new(["Must not specify both -v and -rfc with 'list' command", ("No se deben especificar -v y -rfc simult".to_u << 0x00e1 << "neamente con el comando 'list'")]), Array.typed(Object).new(["Key password must be at least 6 characters", ("La contrase".to_u << 0x00f1 << "a clave debe tener al menos 6 caracteres")]), Array.typed(Object).new(["New password must be at least 6 characters", ("La nueva contrase".to_u << 0x00f1 << "a debe tener al menos 6 caracteres")]), Array.typed(Object).new(["Keystore file exists, but is empty: ", ("El archivo de almac".to_u << 0x00e9 << "n de claves existe, pero est".to_u << 0x00e1 << " vac".to_u << 0x00ed << "o ")]), Array.typed(Object).new(["Keystore file does not exist: ", ("El archivo de almac".to_u << 0x00e9 << "n de claves no existe: ")]), Array.typed(Object).new(["Must specify destination alias", "Se debe especificar alias de destino"]), Array.typed(Object).new(["Must specify alias", "Se debe especificar alias"]), Array.typed(Object).new(["Keystore password must be at least 6 characters", ("La contrase".to_u << 0x00f1 << "a del almac".to_u << 0x00e9 << "n de claves debe tener al menos 6 caracteres")]), Array.typed(Object).new(["Enter keystore password:  ", ("Escriba la contrase".to_u << 0x00f1 << "a del almac".to_u << 0x00e9 << "n de claves:  ")]), Array.typed(Object).new(["Enter source keystore password:  ", ("Escribir contrase".to_u << 0x00f1 << "a de almac".to_u << 0x00e9 << "n de claves de origen:  ")]), Array.typed(Object).new(["Enter destination keystore password:  ", ("Escribir contrase".to_u << 0x00f1 << "a de almac".to_u << 0x00e9 << "n de claves de destino:  ")]), Array.typed(Object).new(["Keystore password is too short - must be at least 6 characters", ("La contrase".to_u << 0x00f1 << "a del almac".to_u << 0x00e9 << "n de claves es demasiado corta, debe tener al menos 6 caracteres")]), Array.typed(Object).new(["Unknown Entry Type", "Tipo de entrada desconocido"]), Array.typed(Object).new(["Too many failures. Alias not changed", "Demasiados errores. No se ha cambiado el alias"]), Array.typed(Object).new(["Entry for alias <alias> successfully imported.", "Las entradas del alias {0} se han importado correctamente."]), Array.typed(Object).new(["Entry for alias <alias> not imported.", "La entrada del alias {0} no se ha importado."]), Array.typed(Object).new(["Problem importing entry for alias <alias>: <exception>.\nEntry for alias <alias> not imported.", "Problema al importar la entrada del alias {0}: {1}.\nNo se ha importado la entrada del alias {0}."]), Array.typed(Object).new(["Import command completed:  <ok> entries successfully imported, <fail> entries failed or cancelled", ("Comando de importaci".to_u << 0x00f3 << "n completado:  {0} entradas importadas correctamente, {1} entradas incorrectas o canceladas")]), Array.typed(Object).new(["Warning: Overwriting existing alias <alias> in destination keystore", ("Advertencia: Sobrescribiendo el alias {0} en el almac".to_u << 0x00e9 << "n de claves de destino")]), Array.typed(Object).new(["Existing entry alias <alias> exists, overwrite? [no]:  ", ("El alias de entrada {0} ya existe, ".to_u << 0x00bf << "desea sobrescribirlo? [no]:  ")]), Array.typed(Object).new(["Too many failures - try later", ("Demasiados fallos; int".to_u << 0x00e9 << "ntelo m".to_u << 0x00e1 << "s adelante")]), Array.typed(Object).new(["Certification request stored in file <filename>", ("Solicitud de certificaci".to_u << 0x00f3 << "n almacenada en el archivo <{0}>")]), Array.typed(Object).new(["Submit this to your CA", "Enviar a la CA"]), Array.typed(Object).new(["if alias not specified, destalias, srckeypass, and destkeypass must not be specified", "si no se especifica el alias, no se puede especificar destalias, srckeypass ni destkeypass"]), Array.typed(Object).new(["Certificate stored in file <filename>", "Certificado almacenado en el archivo <{0}>"]), Array.typed(Object).new(["Certificate reply was installed in keystore", ("Se ha instalado la respuesta del certificado en el almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["Certificate reply was not installed in keystore", ("No se ha instalado la respuesta del certificado en el almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["Certificate was added to keystore", ("Se ha a".to_u << 0x00f1 << "adido el certificado al almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["Certificate was not added to keystore", ("No se ha a".to_u << 0x00f1 << "adido el certificado al almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["[Storing ksfname]", "[Almacenando {0}]"]), Array.typed(Object).new(["alias has no public key (certificate)", ("{0} no tiene clave p".to_u << 0x00fa << "blica (certificado)")]), Array.typed(Object).new(["Cannot derive signature algorithm", "No se puede derivar el algoritmo de firma"]), Array.typed(Object).new(["Alias <alias> does not exist", "El alias <{0}> no existe"]), Array.typed(Object).new(["Alias <alias> has no certificate", "El alias <{0}> no tiene certificado"]), Array.typed(Object).new(["Key pair not generated, alias <alias> already exists", "No se ha generado el par de claves, el alias <{0}> ya existe"]), Array.typed(Object).new(["Cannot derive signature algorithm", "No se puede derivar el algoritmo de firma"]), Array.typed(Object).new(["Generating keysize bit keyAlgName key pair and self-signed certificate (sigAlgName) with a validity of validality days\n\tfor: x500Name", ("Generando par de claves {1} de {0} bits para certificado autofirmado ({2}) con una validez de {3} d".to_u << 0x00ed << "as\n\tpara: {4}")]), Array.typed(Object).new(["Enter key password for <alias>", ("Escriba la contrase".to_u << 0x00f1 << "a clave para <{0}>")]), Array.typed(Object).new(["\t(RETURN if same as keystore password):  ", ("\t(INTRO si es la misma contrase".to_u << 0x00f1 << "a que la del almac".to_u << 0x00e9 << "n de claves):  ")]), Array.typed(Object).new(["Key password is too short - must be at least 6 characters", ("La contrase".to_u << 0x00f1 << "a clave es demasiado corta; debe tener al menos 6 caracteres")]), Array.typed(Object).new(["Too many failures - key not added to keystore", ("Demasiados fallos; no se ha agregado la clave al almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["Destination alias <dest> already exists", "El alias de destino <{0}> ya existe"]), Array.typed(Object).new(["Password is too short - must be at least 6 characters", ("La contrase".to_u << 0x00f1 << "a es demasiado corta; debe tener al menos 6 caracteres")]), Array.typed(Object).new(["Too many failures. Key entry not cloned", "Demasiados errores. No se ha copiado la entrada de clave"]), Array.typed(Object).new(["key password for <alias>", ("contrase".to_u << 0x00f1 << "a clave para <{0}>")]), Array.typed(Object).new(["Keystore entry for <id.getName()> already exists", ("La entrada de almac".to_u << 0x00e9 << "n de claves para <{0}> ya existe")]), Array.typed(Object).new(["Creating keystore entry for <id.getName()> ...", ("Creando entrada de almac".to_u << 0x00e9 << "n de claves para <{0}> ...")]), Array.typed(Object).new(["No entries from identity database added", "No se han agregado entradas de la base de datos de identidades"]), Array.typed(Object).new(["Alias name: alias", "Nombre de alias: {0}"]), Array.typed(Object).new(["Creation date: keyStore.getCreationDate(alias)", ("Fecha de creaci".to_u << 0x00f3 << "n: {0,date}")]), Array.typed(Object).new(["alias, keyStore.getCreationDate(alias), ", "{0}, {1,date}, "]), Array.typed(Object).new(["alias, ", "{0}, "]), Array.typed(Object).new(["Entry type: <type>", "Tipo de entrada: {0}"]), Array.typed(Object).new(["Certificate chain length: ", "Longitud de la cadena de certificado: "]), Array.typed(Object).new(["Certificate[(i + 1)]:", "Certificado[{0,number,integer}]:"]), Array.typed(Object).new(["Certificate fingerprint (MD5): ", "Huella digital de certificado (MD5): "]), Array.typed(Object).new(["Entry type: trustedCertEntry\n", "Tipo de entrada: trustedCertEntry\n"]), Array.typed(Object).new(["trustedCertEntry,", "trustedCertEntry,"]), Array.typed(Object).new(["Keystore type: ", ("Tipo de almac".to_u << 0x00e9 << "n de claves: ")]), Array.typed(Object).new(["Keystore provider: ", ("Proveedor de almac".to_u << 0x00e9 << "n de claves: ")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entry", ("Su almac".to_u << 0x00e9 << "n de claves contiene entrada {0,number,integer}")]), Array.typed(Object).new(["Your keystore contains keyStore.size() entries", ("Su almac".to_u << 0x00e9 << "n de claves contiene {0,number,integer} entradas")]), Array.typed(Object).new(["Failed to parse input", "Error al analizar la entrada"]), Array.typed(Object).new(["Empty input", ("Entrada vac".to_u << 0x00ed << "a")]), Array.typed(Object).new(["Not X.509 certificate", "No es un certificado X.509"]), Array.typed(Object).new(["Cannot derive signature algorithm", "No se puede derivar el algoritmo de firma"]), Array.typed(Object).new(["alias has no public key", ("{0} no tiene clave p".to_u << 0x00fa << "blica")]), Array.typed(Object).new(["alias has no X.509 certificate", "{0} no tiene certificado X.509"]), Array.typed(Object).new(["New certificate (self-signed):", "Nuevo certificado (autofirmado):"]), Array.typed(Object).new(["Reply has no certificates", "La respuesta no tiene certificados"]), Array.typed(Object).new(["Certificate not imported, alias <alias> already exists", "Certificado no importado, el alias <{0}> ya existe"]), Array.typed(Object).new(["Input not an X.509 certificate", "La entrada no es un certificado X.509"]), Array.typed(Object).new(["Certificate already exists in keystore under alias <trustalias>", ("El certificado ya existe en el almac".to_u << 0x00e9 << "n de claves con el alias <{0}>")]), Array.typed(Object).new(["Do you still want to add it? [no]:  ", ("".to_u << 0x00bf << "A".to_u << 0x00fa << "n desea agregarlo? [no]:  ")]), Array.typed(Object).new(["Certificate already exists in system-wide CA keystore under alias <trustalias>", ("El certificado ya existe en el almac".to_u << 0x00e9 << "n de claves de la CA del sistema, con el alias <{0}>")]), Array.typed(Object).new(["Do you still want to add it to your own keystore? [no]:  ", ("".to_u << 0x00bf << "A".to_u << 0x00fa << "n desea agregarlo a su propio almac".to_u << 0x00e9 << "n de claves? [no]:  ")]), Array.typed(Object).new(["Trust this certificate? [no]:  ", ("".to_u << 0x00bf << "Confiar en este certificado? [no]:  ")]), Array.typed(Object).new(["YES", ("S".to_u << 0x00cd << "")]), Array.typed(Object).new(["New prompt: ", "Nuevo {0}: "]), Array.typed(Object).new(["Passwords must differ", ("Las contrase".to_u << 0x00f1 << "as deben ser distintas")]), Array.typed(Object).new(["Re-enter new prompt: ", "Vuelva a escribir el nuevo {0}: "]), Array.typed(Object).new(["Re-enter new password: ", ("Volver a escribir la contrase".to_u << 0x00f1 << "a nueva: ")]), Array.typed(Object).new(["They don't match. Try again", ("No coinciden. Int".to_u << 0x00e9 << "ntelo de nuevo")]), Array.typed(Object).new(["Enter prompt alias name:  ", "Escriba el nombre de alias de {0}:  "]), Array.typed(Object).new(["Enter new alias name\t(RETURN to cancel import for this entry):  ", ("Indique el nuevo nombre de alias\t(INTRO para cancelar la importaci".to_u << 0x00f3 << "n de esta entrada):  ")]), Array.typed(Object).new(["Enter alias name:  ", "Escriba el nombre de alias:  "]), Array.typed(Object).new(["\t(RETURN if same as for <otherAlias>)", "\t(INTRO si es el mismo que para <{0}>)"]), Array.typed(Object).new(["*PATTERN* printX509Cert", ("Propietario: {0}\nEmisor: {1}\nN".to_u << 0x00fa << "mero de serie: {2}\nV".to_u << 0x00e1 << "lido desde: {3} hasta: {4}\nHuellas digitales del certificado:\n\t MD5:  {5}\n\t SHA1: {6}\n\t Nombre del algoritmo de firma: {7}\n\t Versi".to_u << 0x00f3 << "n: {8}")]), Array.typed(Object).new(["What is your first and last name?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "les son su nombre y su apellido?")]), Array.typed(Object).new(["What is the name of your organizational unit?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "l es el nombre de su unidad de organizaci".to_u << 0x00f3 << "n?")]), Array.typed(Object).new(["What is the name of your organization?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "l es el nombre de su organizaci".to_u << 0x00f3 << "n?")]), Array.typed(Object).new(["What is the name of your City or Locality?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "l es el nombre de su ciudad o localidad?")]), Array.typed(Object).new(["What is the name of your State or Province?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "l es el nombre de su estado o provincia?")]), Array.typed(Object).new(["What is the two-letter country code for this unit?", ("".to_u << 0x00bf << "Cu".to_u << 0x00e1 << "l es el c".to_u << 0x00f3 << "digo de pa".to_u << 0x00ed << "s de dos letras de la unidad?")]), Array.typed(Object).new(["Is <name> correct?", ("".to_u << 0x00bf << "Es correcto {0}?")]), Array.typed(Object).new(["no", "no"]), Array.typed(Object).new(["yes", ("s".to_u << 0x00ed << "")]), Array.typed(Object).new(["y", "y"]), Array.typed(Object).new(["  [defaultValue]:  ", "  [{0}]:  "]), Array.typed(Object).new(["Alias <alias> has no key", "El alias <{0}> no tiene clave"]), Array.typed(Object).new(["Alias <alias> references an entry type that is not a private key entry.  The -keyclone command only supports cloning of private key entries", ("El alias <{0}> hace referencia a un tipo de entrada que no es una clave privada.  El comando -keyclone s".to_u << 0x00f3 << "lo permite la clonaci".to_u << 0x00f3 << "n de entradas de claves privadas")]), Array.typed(Object).new(["*****************  WARNING WARNING WARNING  *****************", "*****************  ADVERTENCIA ADVERTENCIA ADVERTENCIA  *****************"]), Array.typed(Object).new(["* The integrity of the information stored in your keystore  *", ("* La integridad de la informaci".to_u << 0x00f3 << "n almacenada en su almac".to_u << 0x00e9 << "n de claves  *")]), Array.typed(Object).new(["* The integrity of the information stored in the srckeystore*", ("* La totalidad de la informaci".to_u << 0x00f3 << "n almacenada en srckeystore*")]), Array.typed(Object).new(["* has NOT been verified!  In order to verify its integrity, *", "* NO se ha comprobado. Para comprobar dicha integridad, *"]), Array.typed(Object).new(["* you must provide your keystore password.                  *", ("deber".to_u << 0x00e1 << " proporcionar su contrase".to_u << 0x00f1 << "a de almac".to_u << 0x00e9 << "n de claves.                  *")]), Array.typed(Object).new(["* you must provide the srckeystore password.                *", ("* se debe indicar la contrase".to_u << 0x00f1 << "a de srckeystore.                *")]), Array.typed(Object).new(["Certificate reply does not contain public key for <alias>", ("La respuesta de certificado no contiene una clave p".to_u << 0x00fa << "blica para <{0}>")]), Array.typed(Object).new(["Incomplete certificate chain in reply", "Cadena de certificado incompleta en la respuesta"]), Array.typed(Object).new(["Certificate chain in reply does not verify: ", "La cadena de certificado de la respuesta no verifica: "]), Array.typed(Object).new(["Top-level certificate in reply:\n", "Certificado de nivel superior en la respuesta:\n"]), Array.typed(Object).new(["... is not trusted. ", "... no es de confianza. "]), Array.typed(Object).new(["Install reply anyway? [no]:  ", ("".to_u << 0x00bf << "instalar respuesta de todos modos? [no]:  ")]), Array.typed(Object).new(["NO", "NO"]), Array.typed(Object).new(["Public keys in reply and keystore don't match", ("Las claves p".to_u << 0x00fa << "blicas en la respuesta y en el almac".to_u << 0x00e9 << "n de claves no coinciden")]), Array.typed(Object).new(["Certificate reply and certificate in keystore are identical", ("La respuesta del certificado y el certificado en el almac".to_u << 0x00e9 << "n de claves son id".to_u << 0x00e9 << "nticos")]), Array.typed(Object).new(["Failed to establish chain from reply", "No se ha podido establecer una cadena a partir de la respuesta"]), Array.typed(Object).new(["n", "n"]), Array.typed(Object).new(["Wrong answer, try again", "Respuesta incorrecta, vuelva a intentarlo"]), Array.typed(Object).new(["Secret key not generated, alias <alias> already exists", "No se ha generado la clave secreta, el alias <{0}> ya existe"]), Array.typed(Object).new(["Please provide -keysize for secret key generation", ("Proporcione el valor de -keysize para la generaci".to_u << 0x00f3 << "n de claves secretas")]), Array.typed(Object).new(["keytool usage:\n", "sintaxis de keytool:\n"]), Array.typed(Object).new(["Extensions: ", "Extensiones: "]), Array.typed(Object).new(["-certreq     [-v] [-protected]", "-certreq     [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-sigalg <sigalg>]", "\t     [-alias <alias>] [-sigalg <algoritmo_firma>]"]), Array.typed(Object).new(["\t     [-file <csr_file>] [-keypass <keypass>]", ("\t     [-file <archivo_csr>] [-keypass <contrase".to_u << 0x00f1 << "a_clave>]")]), Array.typed(Object).new(["\t     [-keystore <keystore>] [-storepass <storepass>]", ("\t     [-keystore <almac".to_u << 0x00e9 << "n_claves>] [-storepass <contrase".to_u << 0x00f1 << "a_almac".to_u << 0x00e9 << "n>]")]), Array.typed(Object).new(["\t     [-storetype <storetype>] [-providername <name>]", "\t     [-storetype <storetype>] [-providername <name>]"]), Array.typed(Object).new(["\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ...", "\t     [-providerclass <provider_class_name> [-providerarg <arg>]] ..."]), Array.typed(Object).new(["\t     [-providerpath <pathlist>]", "\t     [-providerpath <pathlist>]"]), Array.typed(Object).new(["-delete      [-v] [-protected] -alias <alias>", "-delete      [-v] [-protected] -alias <alias>"]), Array.typed(Object).new(["-exportcert  [-v] [-rfc] [-protected]", "-exportcert  [-v] [-rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-file <cert_file>]", "\t     [-alias <alias>] [-file <archivo_cert>]"]), Array.typed(Object).new(["-genkeypair  [-v] [-protected]", "-genkeypair  [-v] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", "\t     [-alias <alias>]"]), Array.typed(Object).new(["\t     [-keyalg <keyalg>] [-keysize <keysize>]", ("\t     [-keyalg <algoritmo_clave>] [-keysize <tama".to_u << 0x00f1 << "o_clave>]")]), Array.typed(Object).new(["\t     [-sigalg <sigalg>] [-dname <dname>]", "\t     [-sigalg <algoritmo_firma>] [-dname <nombre_d>]"]), Array.typed(Object).new(["\t     [-validity <valDays>] [-keypass <keypass>]", ("\t     [-validity <d".to_u << 0x00ed << "as_validez>] [-keypass <contrase".to_u << 0x00f1 << "a_clave>]")]), Array.typed(Object).new(["-genseckey   [-v] [-protected]", "-genseckey   [-v] [-protected]"]), Array.typed(Object).new(["-help", "-help"]), Array.typed(Object).new(["-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]", "-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", "\t     [-alias <alias>]"]), Array.typed(Object).new(["\t     [-alias <alias>] [-keypass <keypass>]", "\t     [-alias <alias>] [-keypass <keypass>]"]), Array.typed(Object).new(["\t     [-file <cert_file>] [-keypass <keypass>]", ("\t     [-file <archivo_cert>] [-keypass <contrase".to_u << 0x00f1 << "a_clave>]")]), Array.typed(Object).new(["-importkeystore [-v] ", "-importkeystore [-v] "]), Array.typed(Object).new(["\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]", "\t     [-srckeystore <srckeystore>] [-destkeystore <destkeystore>]"]), Array.typed(Object).new(["\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]", "\t     [-srcstoretype <srcstoretype>] [-deststoretype <deststoretype>]"]), Array.typed(Object).new(["\t     [-srcprotected] [-destprotected]", "\t     [-srcprotected] [-destprotected]"]), Array.typed(Object).new(["\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]", "\t     [-srcstorepass <srcstorepass>] [-deststorepass <deststorepass>]"]), Array.typed(Object).new(["\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]", "\t     [-srcprovidername <srcprovidername>]\n\t     [-destprovidername <destprovidername>]"]), Array.typed(Object).new(["\t     [-srcalias <srcalias> [-destalias <destalias>]", "\t     [-srcalias <srcalias> [-destalias <destalias>]"]), Array.typed(Object).new(["\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]", "\t       [-srckeypass <srckeypass>] [-destkeypass <destkeypass>]]"]), Array.typed(Object).new(["\t     [-noprompt]", "\t     [-noprompt]"]), Array.typed(Object).new(["-changealias [-v] [-protected] -alias <alias> -destalias <destalias>", "-changealias [-v] [-protected] -alias <alias> -destalias <destalias>"]), Array.typed(Object).new(["\t     [-keypass <keypass>]", ("\t     [-keypass <contrase".to_u << 0x00f1 << "a_claves>]")]), Array.typed(Object).new(["-keypasswd   [-v] [-alias <alias>]", "-keypasswd   [-v] [-alias <alias>]"]), Array.typed(Object).new(["\t     [-keypass <old_keypass>] [-new <new_keypass>]", ("\t     [-keypass <contrase".to_u << 0x00f1 << "a_clave_antigua>] [-new <nueva_contrase".to_u << 0x00f1 << "a_clave>]")]), Array.typed(Object).new(["-list        [-v | -rfc] [-protected]", "-list        [-v | -rfc] [-protected]"]), Array.typed(Object).new(["\t     [-alias <alias>]", "\t     [-alias <alias>]"]), Array.typed(Object).new(["-printcert   [-v] [-file <cert_file>]", "-printcert   [-v] [-file <archivo_certif>]"]), Array.typed(Object).new(["\t     [-alias <alias>]", "\t     [-alias <alias>]"]), Array.typed(Object).new(["-storepasswd [-v] [-new <new_storepass>]", ("-storepasswd [-v] [-new <nueva_contrase".to_u << 0x00f1 << "a_almac".to_u << 0x00e9 << "n>]")]), Array.typed(Object).new(["Warning: A public key for alias 'signers[i]' does not exist.  Make sure a KeyStore is properly configured.", ("Advertencia: No hay clave p".to_u << 0x00fa << "blica para el alias {0}. Compruebe que se haya configurado correctamente un almac".to_u << 0x00e9 << "n de claves.")]), Array.typed(Object).new(["Warning: Class not found: class", "Advertencia: No se ha encontrado la clase: {0}"]), Array.typed(Object).new(["Warning: Invalid argument(s) for constructor: arg", ("Advertencia: Argumento(s) no v".to_u << 0x00e1 << "lido(s) para el constructor: {0}")]), Array.typed(Object).new(["Illegal Principal Type: type", "Tipo de principal no permitido: {0}"]), Array.typed(Object).new(["Illegal option: option", ("Opci".to_u << 0x00f3 << "n no permitida: {0}")]), Array.typed(Object).new(["Usage: policytool [options]", "Sintaxis: policytool [opciones]"]), Array.typed(Object).new(["  [-file <file>]    policy file location", ("  [-file <archivo>]    ubicaci".to_u << 0x00f3 << "n del archivo de normas")]), Array.typed(Object).new(["New", "Nuevo"]), Array.typed(Object).new(["Open", "Abrir"]), Array.typed(Object).new(["Save", "Guardar"]), Array.typed(Object).new(["Save As", "Guardar como"]), Array.typed(Object).new(["View Warning Log", "Ver registro de advertencias"]), Array.typed(Object).new(["Exit", "Salir"]), Array.typed(Object).new(["Add Policy Entry", "Agregar entrada de norma"]), Array.typed(Object).new(["Edit Policy Entry", "Editar entrada de norma"]), Array.typed(Object).new(["Remove Policy Entry", "Eliminar entrada de norma"]), Array.typed(Object).new(["Edit", "Editar"]), Array.typed(Object).new(["Retain", "Mantener"]), Array.typed(Object).new(["Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name.", "Warning: File name may include escaped backslash characters. " + "It is not necessary to escape backslash characters " + "(the tool escapes characters as necessary when writing " + "the policy contents to the persistent store).\n\n" + "Click on Retain to retain the entered name, or click on " + "Edit to edit the name."]), Array.typed(Object).new(["Add Public Key Alias", ("Agregar alias de clave p".to_u << 0x00fa << "blico")]), Array.typed(Object).new(["Remove Public Key Alias", ("Eliminar alias de clave p".to_u << 0x00fa << "blico")]), Array.typed(Object).new(["File", "Archivo"]), Array.typed(Object).new(["KeyStore", ("Almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["Policy File:", "Archivo de normas:"]), Array.typed(Object).new(["Could not open policy file: policyFile: e.toString()", "No se ha podido abrir el archivo java.policy: {0}: {1}"]), Array.typed(Object).new(["Policy Tool", "Herramienta de normas"]), Array.typed(Object).new(["Errors have occurred while opening the policy configuration.  View the Warning Log for more information.", ("Ha habido errores al abrir la configuraci".to_u << 0x00f3 << "n de normas.  V".to_u << 0x00e9 << "ase el registro de advertencias para obtener m".to_u << 0x00e1 << "s informaci".to_u << 0x00f3 << "n.")]), Array.typed(Object).new(["Error", "Error"]), Array.typed(Object).new(["OK", "Aceptar"]), Array.typed(Object).new(["Status", "Estado"]), Array.typed(Object).new(["Warning", "Advertencia"]), Array.typed(Object).new(["Permission:                                                       ", "Permiso:                                                       "]), Array.typed(Object).new(["Principal Type:", "Tipo de principal:"]), Array.typed(Object).new(["Principal Name:", "Nombre de principal:"]), Array.typed(Object).new(["Target Name:                                                    ", "Nombre de destino:                                                    "]), Array.typed(Object).new(["Actions:                                                             ", "Acciones:                                                             "]), Array.typed(Object).new(["OK to overwrite existing file filename?", ("".to_u << 0x00bf << "Sobrescribir el archivo existente {0}?")]), Array.typed(Object).new(["Cancel", "Cancelar"]), Array.typed(Object).new(["CodeBase:", ("Base de c".to_u << 0x00f3 << "digos:")]), Array.typed(Object).new(["SignedBy:", "Firmado por:"]), Array.typed(Object).new(["Add Principal", "Agregar principal"]), Array.typed(Object).new(["Edit Principal", "Editar principal"]), Array.typed(Object).new(["Remove Principal", "Eliminar principal"]), Array.typed(Object).new(["Principals:", "Principales:"]), Array.typed(Object).new(["  Add Permission", "  Agregar permiso"]), Array.typed(Object).new(["  Edit Permission", "  Editar permiso"]), Array.typed(Object).new(["Remove Permission", "Eliminar permiso"]), Array.typed(Object).new(["Done", "Terminar"]), Array.typed(Object).new(["KeyStore URL:", ("URL de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["KeyStore Type:", ("Tipo de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["KeyStore Provider:", ("Proveedor de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["KeyStore Password URL:", ("URL de contrase".to_u << 0x00f1 << "a de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["Principals", "Principales"]), Array.typed(Object).new(["  Edit Principal:", "  Editar principal:"]), Array.typed(Object).new(["  Add New Principal:", "  Agregar nuevo principal:"]), Array.typed(Object).new(["Permissions", "Permisos"]), Array.typed(Object).new(["  Edit Permission:", "  Editar permiso:"]), Array.typed(Object).new(["  Add New Permission:", "  Agregar permiso nuevo:"]), Array.typed(Object).new(["Signed By:", "Firmado por:"]), Array.typed(Object).new(["Cannot Specify Principal with a Wildcard Class without a Wildcard Name", ("No se puede especificar principal con una clase de comod".to_u << 0x00ed << "n sin un nombre de comod".to_u << 0x00ed << "n")]), Array.typed(Object).new(["Cannot Specify Principal without a Name", "No se puede especificar principal sin un nombre"]), Array.typed(Object).new(["Permission and Target Name must have a value", "Permiso y Nombre de destino deben tener un valor"]), Array.typed(Object).new(["Remove this Policy Entry?", ("".to_u << 0x00bf << "Eliminar esta entrada de norma?")]), Array.typed(Object).new(["Overwrite File", "Sobrescribir archivo"]), Array.typed(Object).new(["Policy successfully written to filename", "Norma escrita satisfactoriamente en {0}"]), Array.typed(Object).new(["null filename", "nombre de archivo nulo"]), Array.typed(Object).new(["Save changes?", ("".to_u << 0x00bf << "Guardar los cambios?")]), Array.typed(Object).new(["Yes", ("S".to_u << 0x00ed << "")]), Array.typed(Object).new(["No", "No"]), Array.typed(Object).new(["Policy Entry", "Entrada de norma"]), Array.typed(Object).new(["Save Changes", "Guardar cambios"]), Array.typed(Object).new(["No Policy Entry selected", "No se ha seleccionado entrada de norma"]), Array.typed(Object).new(["Unable to open KeyStore: ex.toString()", ("No se puede abrir el almac".to_u << 0x00e9 << "n de claves: {0}")]), Array.typed(Object).new(["No principal selected", "No se ha seleccionado principal"]), Array.typed(Object).new(["No permission selected", "No se ha seleccionado un permiso"]), Array.typed(Object).new(["name", "nombre"]), Array.typed(Object).new(["configuration type", ("tipo de configuraci".to_u << 0x00f3 << "n")]), Array.typed(Object).new(["environment variable name", "nombre de variable de entorno"]), Array.typed(Object).new(["library name", "nombre de la biblioteca"]), Array.typed(Object).new(["package name", "nombre del paquete"]), Array.typed(Object).new(["policy type", "tipo de directiva"]), Array.typed(Object).new(["property name", "nombre de la propiedad"]), Array.typed(Object).new(["provider name", "nombre del proveedor"]), Array.typed(Object).new(["Principal List", "Lista de principales"]), Array.typed(Object).new(["Permission List", "Lista de permisos"]), Array.typed(Object).new(["Code Base", ("Base de c".to_u << 0x00f3 << "digo")]), Array.typed(Object).new(["KeyStore U R L:", ("URL de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["KeyStore Password U R L:", ("URL de contrase".to_u << 0x00f1 << "a de almac".to_u << 0x00e9 << "n de claves:")]), Array.typed(Object).new(["invalid null input(s)", ("entradas nulas no v".to_u << 0x00e1 << "lidas")]), Array.typed(Object).new(["actions can only be 'read'", ("las acciones s".to_u << 0x00f3 << "lo pueden 'leerse'")]), Array.typed(Object).new(["permission name [name] syntax invalid: ", ("sintaxis de nombre de permiso [{0}] no v".to_u << 0x00e1 << "lida: ")]), Array.typed(Object).new(["Credential Class not followed by a Principal Class and Name", "Clase de credencial no va seguida de una clase y nombre de principal"]), Array.typed(Object).new(["Principal Class not followed by a Principal Name", "La clase de principal no va seguida de un nombre de principal"]), Array.typed(Object).new(["Principal Name must be surrounded by quotes", "El nombre de principal debe ir entre comillas"]), Array.typed(Object).new(["Principal Name missing end quote", "Faltan las comillas finales en el nombre de principal"]), Array.typed(Object).new(["PrivateCredentialPermission Principal Class can not be a wildcard (*) value if Principal Name is not a wildcard (*) value", ("La clase de principal PrivateCredentialPermission no puede ser un valor comod".to_u << 0x00ed << "n (*) si el nombre de principal no lo es tambi".to_u << 0x00e9 << "n")]), Array.typed(Object).new(["CredOwner:\n\tPrincipal Class = class\n\tPrincipal Name = name", "CredOwner:\n\tClase de principal = {0}\n\tNombre de principal = {1}"]), Array.typed(Object).new(["provided null name", "se ha proporcionado un nombre nulo"]), Array.typed(Object).new(["provided null keyword map", "mapa de palabras proporcionado nulo"]), Array.typed(Object).new(["provided null OID map", "mapa de OID proporcionado nulo"]), Array.typed(Object).new(["invalid null AccessControlContext provided", ("se ha proporcionado un AccessControlContext nulo no v".to_u << 0x00e1 << "lido")]), Array.typed(Object).new(["invalid null action provided", ("se ha proporcionado una acci".to_u << 0x00f3 << "n nula no v".to_u << 0x00e1 << "lida")]), Array.typed(Object).new(["invalid null Class provided", ("se ha proporcionado una clase nula no v".to_u << 0x00e1 << "lida")]), Array.typed(Object).new(["Subject:\n", "Asunto:\n"]), Array.typed(Object).new(["\tPrincipal: ", "\tPrincipal: "]), Array.typed(Object).new(["\tPublic Credential: ", ("\tCredencial p".to_u << 0x00fa << "blica: ")]), Array.typed(Object).new(["\tPrivate Credentials inaccessible\n", "\tCredenciales privadas inaccesibles\n"]), Array.typed(Object).new(["\tPrivate Credential: ", "\tCredencial privada: "]), Array.typed(Object).new(["\tPrivate Credential inaccessible\n", "\tCredencial privada inaccesible\n"]), Array.typed(Object).new(["Subject is read-only", ("El asunto es de s".to_u << 0x00f3 << "lo lectura")]), Array.typed(Object).new(["attempting to add an object which is not an instance of java.security.Principal to a Subject's Principal Set", "intentando agregar un objeto que no es un ejemplar de java.security.Principal al conjunto principal de un asunto"]), Array.typed(Object).new(["attempting to add an object which is not an instance of class", "intentando agregar un objeto que no es un ejemplar de {0}"]), Array.typed(Object).new(["LoginModuleControlFlag: ", "LoginModuleControlFlag: "]), Array.typed(Object).new(["Invalid null input: name", ("Entrada nula no v".to_u << 0x00e1 << "lida: nombre")]), Array.typed(Object).new(["No LoginModules configured for name", "No se han configurado LoginModules para {0}"]), Array.typed(Object).new(["invalid null Subject provided", ("se ha proporcionado un asunto nulo no v".to_u << 0x00e1 << "lido")]), Array.typed(Object).new(["invalid null CallbackHandler provided", ("se ha proporcionado CallbackHandler nulo no v".to_u << 0x00e1 << "lido")]), Array.typed(Object).new(["null subject - logout called before login", ("asunto nulo - se ha llamado a fin de sesi".to_u << 0x00f3 << "n antes del inicio de sesi".to_u << 0x00f3 << "n")]), Array.typed(Object).new(["unable to instantiate LoginModule, module, because it does not provide a no-argument constructor", "no se puede lanzar un ejemplar de LoginModule, {0}, porque no incluye un constructor no-argumento"]), Array.typed(Object).new(["unable to instantiate LoginModule", "no se puede lanzar un ejemplar de LoginModule"]), Array.typed(Object).new(["unable to instantiate LoginModule: ", "no se puede instanciar LoginModule: "]), Array.typed(Object).new(["unable to find LoginModule class: ", "no se puede encontrar la clase LoginModule: "]), Array.typed(Object).new(["unable to access LoginModule: ", "no se puede acceder a LoginModule: "]), Array.typed(Object).new(["Login Failure: all modules ignored", ("Fallo en inicio de sesi".to_u << 0x00f3 << "n: se ha hecho caso omiso de todos los m".to_u << 0x00f3 << "dulos")]), Array.typed(Object).new(["java.security.policy: error parsing policy:\n\tmessage", ("java.security.policy: error de an".to_u << 0x00e1 << "lisis de {0}:\n\t{1}")]), Array.typed(Object).new(["java.security.policy: error adding Permission, perm:\n\tmessage", "java.security.policy: error al agregar Permiso, {0}:\n\t{1}"]), Array.typed(Object).new(["java.security.policy: error adding Entry:\n\tmessage", "java.security.policy: error al agregar Entrada:\n\t{0}"]), Array.typed(Object).new(["alias name not provided (pe.name)", "no se ha proporcionado nombre de alias ({0})"]), Array.typed(Object).new(["unable to perform substitution on alias, suffix", ("no se puede realizar la sustituci".to_u << 0x00f3 << "n en el alias, {0}")]), Array.typed(Object).new(["substitution value, prefix, unsupported", ("valor de sustituci".to_u << 0x00f3 << "n, {0}, no soportado")]), Array.typed(Object).new(["(", "("]), Array.typed(Object).new([")", ")"]), Array.typed(Object).new(["type can't be null", "el tipo no puede ser nulo"]), Array.typed(Object).new(["keystorePasswordURL can not be specified without also specifying keystore", ("keystorePasswordURL no puede especificarse sin especificar tambi".to_u << 0x00e9 << "n el almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["expected keystore type", ("se esperaba un tipo de almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["expected keystore provider", ("se esperaba un proveedor de almac".to_u << 0x00e9 << "n de claves")]), Array.typed(Object).new(["multiple Codebase expressions", ("expresiones m".to_u << 0x00fa << "ltiples de base de c".to_u << 0x00f3 << "digos")]), Array.typed(Object).new(["multiple SignedBy expressions", ("expresiones m".to_u << 0x00fa << "ltiples de SignedBy")]), Array.typed(Object).new(["SignedBy has empty alias", ("SignedBy tiene un alias vac".to_u << 0x00ed << "o")]), Array.typed(Object).new(["can not specify Principal with a wildcard class without a wildcard name", ("no se puede especificar Principal con una clase de comod".to_u << 0x00ed << "n sin un nombre de comod".to_u << 0x00ed << "n")]), Array.typed(Object).new(["expected codeBase or SignedBy or Principal", ("se esperaba base de c".to_u << 0x00f3 << "digos o SignedBy o Principal")]), Array.typed(Object).new(["expected permission entry", "se esperaba un permiso de entrada"]), Array.typed(Object).new(["number ", ("n".to_u << 0x00fa << "mero ")]), Array.typed(Object).new(["expected [expect], read [end of file]", ("se esperaba [{0}], se ha le".to_u << 0x00ed << "do [end of file]")]), Array.typed(Object).new(["expected [;], read [end of file]", ("se esperaba [;], se ha le".to_u << 0x00ed << "do [end of file]")]), Array.typed(Object).new(["line number: msg", ("l".to_u << 0x00ed << "nea {0}: {1}")]), Array.typed(Object).new(["line number: expected [expect], found [actual]", ("l".to_u << 0x00ed << "nea {0}: se esperaba [{1}], se ha encontrado [{2}]")]), Array.typed(Object).new(["null principalClass or principalName", "principalClass o principalName nulos"]), Array.typed(Object).new(["PKCS11 Token [providerName] Password: ", ("Contrase".to_u << 0x00f1 << "a de la tarjeta de claves PKCS11 [{0}]: ")]), Array.typed(Object).new(["unable to instantiate Subject-based policy", "no se puede instanciar una directiva basada en Subject"])]) }
      const_attr_reader  :Contents
    }
    
    typesig { [] }
    # Returns the contents of this <code>ResourceBundle</code>.
    # 
    # <p>
    # 
    # @return the contents of this <code>ResourceBundle</code>.
    def get_contents
      return Contents
    end
    
    typesig { [] }
    def initialize
      super()
    end
    
    private
    alias_method :initialize__resources_es, :initialize
  end
  
end
